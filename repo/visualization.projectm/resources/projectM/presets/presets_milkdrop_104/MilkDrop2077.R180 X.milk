MILKDROP_PRESET_VERSION=300
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=5.000
fGammaAdj=1.880
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=7
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.303
fWaveScale=2.911
fWaveSmoothing=0.900
fWaveParam=0.000
fModWaveAlphaStart=1.110
fModWaveAlphaEnd=1.230
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=1.00400
rot=-0.01400
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.02944
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.500
wave_b=0.800
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.010
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=0.800
b2x=0.700
b3x=1.000
b1ed=0.000
per_frame_1=wave_r = wave_r + 0.350*( 0.60*sin(3.980*time) + 0.40*sin(11.047*time) );
per_frame_2=wave_g = wave_g + 0.350*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );
per_frame_3=wave_b = wave_b + 0.350*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );
per_frame_4=cx = cx + 0.110*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );
per_frame_5=cy = cy + 0.110*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );
per_frame_6=dx = dx + 0.005*( 0.60*sin(0.173*time) + 0.40*sin(0.223*time) );
per_frame_7=decay = decay - 0.01*equal(frame%20,0);
per_frame_8=wave_x = 0.5 + 0.25*cos(time*2)/aspecty;
per_frame_9=wave_y = 0.5 + 0.25*sin(time*2)/aspectx;
per_frame_10=
per_frame_11=ang = time*2;
per_frame_12=q1 = cos(ang);
per_frame_13=q2 = sin(ang);
warp_1=`shader_body {
warp_2=`float corr = texsize.xy*texsize_noise_lq.zw;
warp_3=`float2 uv1 = float2(uv.x-0.5,uv.y-0.5)*aspect.xy;
warp_4=`
warp_5=`
warp_6=`float3 noiseVal =lum (tex2D(sampler_noise_lq, corr*uv*.02+ .1*rand_frame));
warp_7=`
warp_8=`float2 k1 = float2((uv.x), (uv.y));
warp_9=`
warp_10=`float3 ret1 = GetBlur1(uv) ;
warp_11=`
warp_12=`float k2 = (40*uv)%8;
warp_13=`
warp_14=`float2 zz = uv.xy * texsize.xy *.3;
warp_15=`float h1 = (tan(zz.x));
warp_16=`float h2 = (tan(zz.y));
warp_17=`
warp_18=`uv.xy -= float2(h1,h2)*texsize.zw * 3;
warp_19=`
warp_20=`
warp_21=`float3 crisp = tex2D(sampler_main,frac(uv)) + noiseVal/30;
warp_22=`
warp_23=`crisp = lerp (crisp, 1-crisp.zyx, 0.01);
warp_24=`    
warp_25=` ret = crisp -.03 - 0.2*pow(1-rad,18);
warp_26=`}
comp_1=`#define sat saturate
comp_2=`float z, z0, radi;
comp_3=`float2 uv1, uv2, uva, dz;
comp_4=`static const int anz = 35;
comp_5=`static const float2 moonpos = 0.6;
comp_6=`static const float2 hor = texsize.zw*float2(1,0);
comp_7=`static const float2 ver = texsize.zw*float2(1,0).yx;
comp_8=`float3 Get1 (float2 uvi, float par)
comp_9=`{return lerp(GetBlur1(uvi), GetPixel(uvi), 0*saturate(par/2))*par;}
comp_10=`
comp_11=`shader_body {
comp_12=`
comp_13=`
comp_14=`
comp_15=`
comp_16=`
comp_17=`uva = (uv-0.5)*aspect.xy+0.5;
comp_18=`float moon = (.1 / length (uva-moonpos));
comp_19=`
comp_20=`dz.x = lum(GetPixel(uv-hor)) - lum(GetPixel(uv+hor));
comp_21=`dz.y = lum(GetPixel(uv-ver)) - lum(GetPixel(uv+ver));
comp_22=`
comp_23=`float3 shine = GetPixel(uv); 
comp_24=`
comp_25=`radi = 1;
comp_26=`for (int n=1; n <= anz; n++)
comp_27=`{ 
comp_28=`  shine += 2.0/anz*Get1((uv-moonpos)*radi+moonpos,radi);
comp_29=`  radi -= 0.75/anz;;
comp_30=`}
comp_31=`ret = max(shine,0*GetPixel(uv));
comp_32=`//ret = shine+GetPixel(uv);
comp_33=`
comp_34=`}

[SPRITE1_BEGIN]
SpriteName=sprites\x1.png
SpriteColorKey=0x000000
SpriteLayer=1
SpriteBlend=3
SpriteAlpha=1.000000
SpriteBurn=1
SpriteX=-0.070000
SpriteY=0.035000
SpriteSX=-0.239999
SpriteSY=-0.239999
SpriteRot=1.000000
SpriteSpeed=0.300000
SpriteRepeatX=1.000000
SpriteRepeatY=1.000000
code_1=rot=time*0.27+(bass_att/15);
code_2=new_scale=1.0+-0.299999/2+0.1*sin(time*0.800000+(bass_att/10));
code_3=sx=new_scale;
code_4=sy=new_scale;
[SPRITE1_END]
