MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=5.000
fGammaAdj=1.000
fDecay=0.925
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.000
nVideoEchoOrientation=3
nWaveMode=9
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=1
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=4.100
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=2.853
fZoomExponent=3.60000
fShader=0.000
zoom=1.02109
rot=-0.16000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.30900
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.010
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=0.99999
wavecode_0_smoothing=0.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_init1=xb = 1;
wave_0_init2=yb = 1;
wave_0_init3=xm = 0.5;
wave_0_init4=ym = 0.5;
wave_0_per_frame1=sa = 0.1;
wave_0_per_frame2=sb = 1-sa;
wave_0_per_frame3=
wave_0_per_frame4=xb = xb*(1 - 2*above(xm,sb) - 2*below(xm,sa));
wave_0_per_frame5=yb = yb*(1 - 2*above(ym,sb) - 2*below(ym,sa));
wave_0_per_frame6=
wave_0_per_frame7=xb = xb/abs(xb);
wave_0_per_frame8=yb = yb/abs(yb);
wave_0_per_frame9=
wave_0_per_frame10=xm = xm + 0.02*xb*(sin(time*0.656)*0.3 + 0.7*sin(time*0.342));
wave_0_per_frame11=ym = ym + 0.02*yb*(sin(time*0.289)*0.4 + 0.6*sin(time*0.702));
wave_0_per_frame12=
wave_0_per_frame13=t1 = xm;
wave_0_per_frame14=t2 = ym;
wave_0_per_frame15=
wave_0_per_frame16=it = it + 0.1*xb;
wave_0_per_frame17=t3 = it;
wave_0_per_frame18=ita = ita + 0.0005 - above(ita,1);
wave_0_per_frame19=t4 = ita;
wave_0_per_point1=vol = value1;
wave_0_per_point2=
wave_0_per_point3=sp = sample + t4 - above(sample,(1-t4));
wave_0_per_point4=da = 0.25;
wave_0_per_point5=db = 0.5;
wave_0_per_point6=dc = 0.75;
wave_0_per_point7=
wave_0_per_point8=xs = t1;
wave_0_per_point9=ys = t2;
wave_0_per_point10=
wave_0_per_point11=ra = 0.15;
wave_0_per_point12=tt = t3;
wave_0_per_point13=
wave_0_per_point14=xa=xs + 0.75*ra*sin(tt);
wave_0_per_point15=ya=ys + ra*cos(tt);
wave_0_per_point16=xb=xs + 0.75*ra*sin(tt+1.57);
wave_0_per_point17=yb=ys + ra*cos(tt+1.57);
wave_0_per_point18=xc=xs + 0.75*ra*sin(tt+3.14);
wave_0_per_point19=yc=ys + ra*cos(tt+3.14);
wave_0_per_point20=xd=xs + 0.75*ra*sin(tt+4.71);
wave_0_per_point21=yd=ys + ra*cos(tt+4.71);
wave_0_per_point22=
wave_0_per_point23=mod = vol*0.1;
wave_0_per_point24=x = below(sp,da)*(xa + sp*4*(xb-xa));
wave_0_per_point25=y = below(sp,da)*(ya + sp*4*(yb-ya));
wave_0_per_point26=x = x + below(sp,db)*above(sp,da)*(xb + (sp-da)*4*(xc-xb));
wave_0_per_point27=y = y + below(sp,db)*above(sp,da)*(yb + (sp-da)*4*(yc-yb));
wave_0_per_point28=x = x + below(sp,dc)*above(sp,db)*(xc + (sp-db)*4*(xd-xc));
wave_0_per_point29=y = y + below(sp,dc)*above(sp,db)*(yc + (sp-db)*4*(yd-yc));
wave_0_per_point30=x = x + above(sp,dc)*(xd + (sp-dc)*4*(xa-xd));
wave_0_per_point31=y = y + above(sp,dc)*(yd + (sp-dc)*4*(ya-yd));
wave_0_per_point32=
wave_0_per_point33=vl = min(2,vol);
wave_0_per_point34=x = x + vl*(xs-x);
wave_0_per_point35=y = y + vl*(ys-y);
wave_0_per_point36=
wave_0_per_point37=ite = ite + 0.00003 -900*above(ite,900);
wave_0_per_point38=den = 25.133;
wave_0_per_point39=sm = sample + ite;
wave_0_per_point40=aa = 0.7 + 0.3*sin(sm*den);
wave_0_per_point41=bb = aa*(0.7 + 0.3*sin(sm*den));
wave_0_per_point42=cc = bb*(0.7 + 0.3*sin(sm*den));
wave_0_per_point43=b=aa;g=bb;r=cc;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=0.99999
wavecode_1_smoothing=0.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_init1=xb = 1;
wave_1_init2=yb = 1;
wave_1_init3=xm = 0.5;
wave_1_init4=ym = 0.5;
wave_1_per_frame1=sa = 0.1;
wave_1_per_frame2=sb = 1-sa;
wave_1_per_frame3=
wave_1_per_frame4=xb = xb*(1 - 2*above(xm,sb) - 2*below(xm,sa));
wave_1_per_frame5=yb = yb*(1 - 2*above(ym,sb) - 2*below(ym,sa));
wave_1_per_frame6=
wave_1_per_frame7=xb = xb/abs(xb);
wave_1_per_frame8=yb = yb/abs(yb);
wave_1_per_frame9=
wave_1_per_frame10=xm = xm + 0.02*xb*(sin(time*0.456)*0.3 + 0.7*sin(time*0.564));
wave_1_per_frame11=ym = ym + 0.02*yb*(sin(time*0.782)*0.4 + 0.6*sin(time*0.231));
wave_1_per_frame12=
wave_1_per_frame13=t1 = xm;
wave_1_per_frame14=t2 = ym;
wave_1_per_frame15=
wave_1_per_frame16=it = it + 0.1*xb;
wave_1_per_frame17=t3 = it;
wave_1_per_frame18=ita = ita + 0.0005 - above(ita,1);
wave_1_per_frame19=t4 = ita;
wave_1_per_point1=vol = value2;
wave_1_per_point2=sp = sample + t4 - above(sample,(1-t4));
wave_1_per_point3=da = 0.25;
wave_1_per_point4=db = 0.5;
wave_1_per_point5=dc = 0.75;
wave_1_per_point6=
wave_1_per_point7=xs = t1;
wave_1_per_point8=ys = t2;
wave_1_per_point9=
wave_1_per_point10=ra = 0.15;
wave_1_per_point11=tt = t3;
wave_1_per_point12=
wave_1_per_point13=xa=xs + 0.75*ra*sin(tt);
wave_1_per_point14=ya=ys + ra*cos(tt);
wave_1_per_point15=xb=xs + 0.75*ra*sin(tt+1.57);
wave_1_per_point16=yb=ys + ra*cos(tt+1.57);
wave_1_per_point17=xc=xs + 0.75*ra*sin(tt+3.14);
wave_1_per_point18=yc=ys + ra*cos(tt+3.14);
wave_1_per_point19=xd=xs + 0.75*ra*sin(tt+4.71);
wave_1_per_point20=yd=ys + ra*cos(tt+4.71);
wave_1_per_point21=
wave_1_per_point22=mod = vol*0.1;
wave_1_per_point23=x = below(sp,da)*(xa + sp*4*(xb-xa));
wave_1_per_point24=y = below(sp,da)*(ya + sp*4*(yb-ya));
wave_1_per_point25=x = x + below(sp,db)*above(sp,da)*(xb + (sp-da)*4*(xc-xb));
wave_1_per_point26=y = y + below(sp,db)*above(sp,da)*(yb + (sp-da)*4*(yc-yb));
wave_1_per_point27=x = x + below(sp,dc)*above(sp,db)*(xc + (sp-db)*4*(xd-xc));
wave_1_per_point28=y = y + below(sp,dc)*above(sp,db)*(yc + (sp-db)*4*(yd-yc));
wave_1_per_point29=x = x + above(sp,dc)*(xd + (sp-dc)*4*(xa-xd));
wave_1_per_point30=y = y + above(sp,dc)*(yd + (sp-dc)*4*(ya-yd));
wave_1_per_point31=
wave_1_per_point32=vl = min(2,vol);
wave_1_per_point33=x = x + vl*(xs-x);
wave_1_per_point34=y = y + vl*(ys-y);
wave_1_per_point35=
wave_1_per_point36=ite = ite + 0.00003 -900*above(ite,900);
wave_1_per_point37=den = 25.133;
wave_1_per_point38=sm = sample + ite;
wave_1_per_point39=aa = 0.8 + 0.2*sin(sm*den);
wave_1_per_point40=bb = aa*(0.3 + 0.7*sin(sm*den));
wave_1_per_point41=cc = bb*(0.5 + 0.5*sin(sm*den));
wave_1_per_point42=r=aa;g=bb;b=cc;
per_frame_1=wave_r = wave_r + 0.600*( 0.60*sin(0.933*(time*0.6)) + 0.40*sin(1.045*(time*0.6)) );
per_frame_2=wave_g = wave_g + 0.400*( 0.60*sin(0.900*(time*0.6)) + 0.20*sin(0.956*(time*0.6)) );
per_frame_3=wave_b = wave_b + 0.100*( 0.60*sin(0.910*(time*0.6)) + 0.40*sin(0.920*(time*0.6)) );
per_frame_4=q8 = oldq8+if(above(bass+bass_att,1.8),q8+0.0005*pow((bass+bass_att-1),9),0);
per_frame_5=oldq8 = q8;
per_frame_6=monitor = q8;
per_frame_7=zoom = zoom + 0.023*( 0.60*sin(0.339*q8) + 0.40*sin(0.276*q8) );
per_frame_8=rot = rot + 0.030*( 0.60*sin(0.381*q8) + 0.40*sin(0.579*q8) );
per_frame_9=//decay = decay - 0.02*equal(frame%40,0);
per_frame_10=mv_r = wave_r;
per_frame_11=mv_b = wave_b;
per_frame_12=mv_g = wave_g;
per_frame_13=mv_x = 1.25;
per_frame_14=mv_y = 1.25;
per_frame_15=mv_dx = 0.1*sin(1.1*(time*0.6));
per_frame_16=mv_dy = 0.1*cos(1.112*(time*0.6));
per_frame_17=
per_frame_18=// the möbius transformation
per_frame_19=// z -> (az+b)/(cz-d); where a,b,c,d are complex numbers and z will be the uv-vector
per_frame_20=// (az+b)/(cz-d) = a/c + mu/(cz+d), with mu = (bc-ad)/c
per_frame_21=// so a/c and mu can be calculated outside of the shader
per_frame_22=
per_frame_23=//before inversion
per_frame_24=
per_frame_25=scale = 1;
per_frame_26=angle = (time*0.6)*.2;
per_frame_27=translation_x = 0;
per_frame_28=translation_y = 0.12;
per_frame_29=
per_frame_30=a_r = cos(angle)*scale;
per_frame_31=a_i = sin(angle)*scale;
per_frame_32=b_r = translation_x;
per_frame_33=b_i = translation_y;
per_frame_34=
per_frame_35=//complex inverted
per_frame_36=scale = 1;
per_frame_37=angle = sin((time*0.6)*0.1337)*0.3;
per_frame_38=translation_u = 0;
per_frame_39=translation_v = -0.2;
per_frame_40=
per_frame_41=// c
per_frame_42=q15 = cos(angle)*scale;
per_frame_43=q16 = sin(angle)*scale;
per_frame_44=
per_frame_45=// d
per_frame_46=q17 = translation_u;
per_frame_47=q18 = translation_v;
per_frame_48=
per_frame_49=// c^(-1)
per_frame_50=c_inv_r = q15/(q15*q15+q16*q16);
per_frame_51=c_inv_i = q16/(q15*q15+q16*q16);
per_frame_52=
per_frame_53=// a*c^(-1)
per_frame_54=q11 = (a_r*c_inv_r - a_i*c_inv_i);
per_frame_55=q12 = (a_r*c_inv_i - a_i*c_inv_r);
per_frame_56=
per_frame_57=// (bc-ad)
per_frame_58=bcad_r = (b_r*q15 - b_i*q16)-(a_r*q17-a_i*q18);
per_frame_59=bcad_i = (b_r*q16 - b_i*q15)-(a_r*q18-a_i*q17);
per_frame_60=
per_frame_61=// mu*c^(-1)
per_frame_62=q13 = bcad_r*c_inv_r - bcad_i*c_inv_i;
per_frame_63=q14 = bcad_r*c_inv_i - bcad_i*c_inv_r;
per_pixel_1=rot=rot+1/(10*(rad+0.2+0.1*sin(q8)));
warp_1=`shader_body
warp_2=`{
warp_3=`uv = lerp(uv_orig,uv,0.3);
warp_4=`
warp_5=`float2 d = texsize.zw * 3;
warp_6=`float3 dx = ( GetBlur1(uv + float2(1,0)*d) - GetBlur1(uv-float2(1,0)*d) );
warp_7=`float3 dy = ( GetBlur1(uv + float2(0,1)*d) - GetBlur1(uv-float2(0,1)*d) );
warp_8=`
warp_9=`uv += float2(lum(dx),lum(dy))*texsize.zw*9;
warp_10=`ret = tex2d(sampler_fc_main, uv) - 0.01;
warp_11=`
warp_12=`}
comp_1=`shader_body
comp_2=`{
comp_3=`
comp_4=`uv = 0.5 + (uv-0.5)*0.98;
comp_5=`    float2 d = texsize.zw*4;
comp_6=`    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );
comp_7=`    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );
comp_8=`
comp_9=`float4 noise = tex3D(sampler_noisevol_hq, ((uv.xyy+float3(lum(dx),lum(dy),0)*0.5)*texsize.xyy*texsize_noisevol_hq.zww).xyz*float3(1,1,0)*0.05
comp_10=`                                        + time*float3(0,0,1)*0.2 );
comp_11=`uv -= float2(lum(dx),lum(dy))*0.04;
comp_12=`ret = abs(GetPixel(uv)+GetBlur1(uv)-GetBlur2(uv)-GetBlur3(uv));
comp_13=`ret *= lum(noise)*3; 
comp_14=`ret = pow(ret,0.5);
comp_15=`}
