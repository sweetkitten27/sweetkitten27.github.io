MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=2
[preset00]
fRating=4.000
fGammaAdj=1.460
fDecay=0.935
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.500
nVideoEchoOrientation=2
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=1
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=3.200
fWaveScale=1.768
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=1.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=1.000
wave_g=1.000
wave_b=1.000
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.100
ob_b=0.000
ob_a=0.300
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=1.248
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=1.000
mv_g=1.000
mv_b=0.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
shapecode_0_enabled=1
shapecode_0_sides=20
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=20
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.04511
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.90529
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=0.100
shapecode_0_g2=0.100
shapecode_0_b2=0.100
shapecode_0_a2=0.200
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_init1=n=0; loop(500, 
shape_0_init2=  megabuf(i)=rand(1)-.5;
shape_0_init3=  megabuf(i+1)=rand(1)-.5;
shape_0_init4=  megabuf(i+2)= rand(4);
shape_0_init5=  megabuf(i+3)= rand(4);
shape_0_init6=i+=4);
shape_0_init7=if (i%4==0, r=r2=g=g2=b=b2=0;a=a2=1;,0);
shape_0_per_frame1=i=instance; n=i*4;
shape_0_per_frame2=k1 = i/num_inst;
shape_0_per_frame3=blk = i%8==0;
shape_0_per_frame4=megabuf(n+2)-=.1*(1-blk/2)/fps;
shape_0_per_frame5=if (megabuf(n+2)<0, 
shape_0_per_frame6=  megabuf(n)  = rand(1)-.5;
shape_0_per_frame7=  megabuf(n+1)=rand(1)-.5;
shape_0_per_frame8=  megabuf(n+2)=4;
shape_0_per_frame9=  megabuf(n+3)=1+rand(2);;
shape_0_per_frame10=,0);
shape_0_per_frame11=z=megabuf(n+2);
shape_0_per_frame12=x = megabuf(n)/z/2+.5;
shape_0_per_frame13=y = megabuf(n+1)/z/2+.5;
shape_0_per_frame14=rad = .004/z*reg32 *megabuf(n+3);
shape_0_per_frame15=a = min(1,1/pow(z,.2));
shape_0_per_frame16=a2=a/4;
shape_0_per_frame17=
shape_0_per_frame18=
shape_0_per_frame19=if (blk,r=r2=g=g2=b=b2=0;a=a2=1;rad*=2;,0);
per_frame_init_1=index = 0;
per_frame_init_2=loop (300000,
per_frame_init_3=  megabuf(index) = .1;
per_frame_init_4=  gmegabuf(index) = 0;
per_frame_init_5=  index = index + 1;
per_frame_init_6=);
per_frame_init_7=
per_frame_init_8=vol_=1;
per_frame_init_9=
per_frame_init_10=q10 = rand(100) >= 30;
per_frame_init_11=q11 = rand(100) >= 30;
per_frame_init_12=q12 = (rand(100) >= 30)*9+3;
per_frame_init_13=q13 = min(max((rand(100)/50-.5),.2),1);
per_frame_init_14=q14 = 0;
per_frame_1=dec_m = pow(.9, 30/fps);dec_s = pow(.98, 30/fps);dec_xs = pow(.985, 30/fps);
per_frame_2=
per_frame_3=flen = 128; shapes = 16;
per_frame_4=
per_frame_5=beat = (bass + treb + mid)/3;
per_frame_6=beat_ = beat_*dec_m + (1-dec_m)*beat; 
per_frame_7=is_beat = above(beat, peak*8) * above (time, t0+.2);
per_frame_8=t0 = is_beat*time + (1-is_beat)*t0;
per_frame_9=peak = is_beat * beat + (1-is_beat)*peak*dec_m;
per_frame_10=index = (index + is_beat) %8;
per_frame_11=q22 = peak;
per_frame_12=q27 = index;
per_frame_13=
per_frame_14=n = 0; vol = .5; bbase = 5000;
per_frame_15=loop (flen,
per_frame_16=  value = gmegabuf(n) * (1+1/(n+.5));
per_frame_17=  trig = value >= megabuf(n);
per_frame_18=  dec = if(trig,0.2,pow(.98-.1*n/flen,30/fps));
per_frame_19=  megabuf(n) = megabuf(n)*dec + (1-dec)*value;
per_frame_20=  vol = vol + pow(megabuf(n),2);
per_frame_21=  n = n+1;
per_frame_22=);
per_frame_23=vol = sqrt(vol);
per_frame_24=vol_ = dec_m*vol_ + (1-dec_m)*vol;
per_frame_25=
per_frame_26=// post smoothing
per_frame_27=n = 0;
per_frame_28=loop (flen,
per_frame_29=  value = megabuf(n);
per_frame_30=  dec = if (megabuf(1000+n)<=value,.9,.95-0.1*n/flen);
per_frame_31=  dec = pow(dec,30/fps);
per_frame_32=//  dec = 1; //#
per_frame_33=    megabuf(n+1000) = megabuf(n+1000)*dec+ (1-dec)*value/vol_;
per_frame_34=  n = n+1;
per_frame_35=);
per_frame_36=
per_frame_37=
per_frame_38=// Berechnung Ortskoordinaten aus Spektrum
per_frame_39=dist = 2; reduce = flen/shapes;
per_frame_40=n = 2000; m = 1000+dist; k=0;
per_frame_41=loop (shapes,
per_frame_42=  betr = (megabuf(m)+megabuf(m-dist)+megabuf(m+dist))/3;
per_frame_43=  megabuf(n)   = megabuf(m) - megabuf(m+dist);
per_frame_44=  megabuf(n+1) = megabuf(m) - megabuf(m-dist);
per_frame_45=  z1 = max(.03/betr,.05);
per_frame_46=  z2 = ((k+q22*q14+time*2)%shapes)/shapes+.06;
per_frame_47=  megabuf(n+2) = q13*z1+(1-q13)*z2;
per_frame_48=  m = m + reduce; n = n+8; k= k+1;
per_frame_49=);
per_frame_50=
per_frame_51=
per_frame_52=//Projektion
per_frame_53=n = 1000; m = 2000;
per_frame_54=loop (shapes,
per_frame_55=  gmegabuf(n) = megabuf(m)/megabuf(m+2);
per_frame_56=  gmegabuf(n+1) = megabuf(m+1)/megabuf(m+2);
per_frame_57=  gmegabuf(n+2) = megabuf(m+2);
per_frame_58=  mx = mx + gmegabuf(n)/shapes/fps;
per_frame_59=  my = my + gmegabuf(n+1)/shapes/fps;
per_frame_60=  n = n+8; m = m+8;
per_frame_61=);
per_frame_62=
per_frame_63=
per_frame_64=q1 = sin(8*mx+time*.1)/2;
per_frame_65=q2 = sin(-8*my+time*.03);
per_frame_66=q3 = atan2(gmegabuf(1000+8),gmegabuf(1000+8+1));
per_frame_67=
per_frame_68=trel = trel + bass_att/fps;
per_frame_69=q4 = trel;
per_frame_70=
per_frame_71=monitor = q13;
per_frame_72=
per_frame_73=q32 = aspecty;
per_frame_74=q31 = min(.996,dec_xs);
per_pixel_1=rot = 0.0; zoom = 1.04; warp = 0; dx = 0; dy = 0;
warp_1=`shader_body
warp_2=`{
warp_3=`    // Define PI
warp_4=`    #define PI 3.14159265359
warp_5=`
warp_6=`    // Adjust UVs
warp_7=`    uv = uv * 2.0 - 1.0;
warp_8=`   // uv *= uv.x / uv.y;
warp_9=`
warp_10=`    // Make a tube
warp_11=`    float f = 3.0 / length(uv);
warp_12=`
warp_13=`    // Add the angle
warp_14=`    f += atan2(uv.x, uv.y) / (PI / 12.0);
warp_15=`
warp_16=`    // Let's roll
warp_17=`    f -= time;
warp_18=`
warp_19=`    // Make it black and white
warp_20=`    f = 1.0 - clamp(sin(f * PI * 1.0) * dot(uv, uv) * texsize.y / 15.0 + 0.5, 0.0, 1.0);
warp_21=`
warp_22=`    // Add the darkness to the end of the tunnel
warp_23=`    f *= sin(length(uv) - 0.05);
warp_24=`
warp_25=`    // Output the final color
warp_26=`    ret = float4(f, f, f, 1.0);
warp_27=`}
comp_1=`
comp_2=`float2 rs, uv2, uv3;
comp_3=`float3 noise, ret1;
comp_4=`
comp_5=`shader_body {
comp_6=`//uv *= aspect.xy;
comp_7=`
comp_8=`float corr = texsize.xy*texsize_noise_lq.zw;
comp_9=`float2 uv1 = (uv-.5-float2 (q7,q8))*aspect.xy;
comp_10=`
comp_11=`float h1 = .5;
comp_12=`
comp_13=`//uv1 = mul(uv1, float2x2(_qa));
comp_14=`//uv = uv1+.5;
comp_15=`
comp_16=`float z = h1/abs(pow(uv1.y,1));
comp_17=`// an pow spielen
comp_18=`//z = rad*13;
comp_19=`rs.x = uv1.x * z;
comp_20=`rs.y = z/2 + time*4;
comp_21=`
comp_22=`
comp_23=`rs = (uv_orig-.5- float2 (q5,q6)) * aspect.xy;
comp_24=`float2 dz1 = normalize(rs);
comp_25=`float rad1 = 12*length (rs)*rad;
comp_26=`
comp_27=`float2 uv4 =  .1*tan(rad1)*dz1 + float2(q15,q16);
comp_28=`float3 ret1 = tex2D (sampler_main,uv4);
comp_29=`float mask1 = saturate(10-7*rad1);
comp_30=`
comp_31=`noise = tex2D(sampler_noise_hq,uv4);
comp_32=`
comp_33=`uv2 = (uv1*(1-pow(length(uv1),3))-.5);
comp_34=`uv3 =frac(uv2-noise*.04 * (mask1));
comp_35=`
comp_36=`ret1 = 1.5*GetPixel(uv3) + GetBlur1(uv3)*1;
comp_37=`
comp_38=`
comp_39=`ret = ret1;    
comp_40=`//MilkDrop3 Color Mode:
comp_41=`ret /= float3(2.2,1.3,1.9);
comp_42=`//MilkDrop3 Solarize Mode:
comp_43=`ret = ret*(1-ret)*4;
comp_44=`}
