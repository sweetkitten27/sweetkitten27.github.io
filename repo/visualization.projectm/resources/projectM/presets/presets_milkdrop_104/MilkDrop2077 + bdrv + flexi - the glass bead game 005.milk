MILKDROP_PRESET_VERSION=300
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=0.000
fGammaAdj=1.000
fDecay=0.940
fVideoEchoZoom=0.498
fVideoEchoAlpha=0.000
nVideoEchoOrientation=2
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=1
bDarken=0
bSolarize=0
bInvert=1
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=13.29089
rot=0.00000
cx=0.500
cy=0.500
dx=-0.28000
dy=-0.32000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.050
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.600
ib_size=0.050
ib_r=1.000
ib_g=0.000
ib_b=0.000
ib_a=0.400
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
shapecode_0_enabled=1
shapecode_0_sides=14
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=366
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.03030
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.62832
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=ma=ma+(above(bass,1)*3.1415*.01*bass);
shape_0_per_frame2=ma=ma-(above(treb,1)*3.1415*.01*treb);
shape_0_per_frame3=
shape_0_per_frame4=mx=mx+(.0002*cos(ma));
shape_0_per_frame5=my=my+(.0002*sin(ma));
shape_0_per_frame6=
shape_0_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_0_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_0_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_0_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_0_per_frame11=
shape_0_per_frame12=x=mx;
shape_0_per_frame13=y=my;
shape_0_per_frame14=
shape_0_per_frame15=a=(above(bass+mid+treb,.8));
shapecode_1_enabled=1
shapecode_1_sides=14
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=408
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.03000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.62832
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=1.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=ma=ma+(above(bass,1)*3.1415*.05*bass);
shape_1_per_frame2=ma=ma-(above(mid,1)*3.1415*.05*mid);
shape_1_per_frame3=
shape_1_per_frame4=mx=mx+(.0001*cos(ma));
shape_1_per_frame5=my=my+(.0001*sin(ma));
shape_1_per_frame6=
shape_1_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_1_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_1_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_1_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_1_per_frame11=
shape_1_per_frame12=x=mx;
shape_1_per_frame13=y=my;
shape_1_per_frame14=
shape_1_per_frame15=a=(above(bass+mid+treb,.1));
shapecode_2_enabled=1
shapecode_2_sides=14
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=262
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.02970
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.62832
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=ma=ma+(above(mid,1)*3.1415*.01*mid);
shape_2_per_frame2=ma=ma-(above(treb,1)*3.1415*.01*treb);
shape_2_per_frame3=
shape_2_per_frame4=mx=mx+(.0004*cos(ma));
shape_2_per_frame5=my=my+(.0004*sin(ma));
shape_2_per_frame6=
shape_2_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_2_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_2_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_2_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_2_per_frame11=
shape_2_per_frame12=x=mx;
shape_2_per_frame13=y=my;
shape_2_per_frame14=
shape_2_per_frame15=a=(above(bass+mid+treb,.3));
shapecode_3_enabled=1
shapecode_3_sides=14
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=276
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.03030
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.62832
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=1.000
shapecode_3_b2=1.000
shapecode_3_a2=1.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=ma=ma+(above(bass,.5)*3.1415*.02*bass);
shape_3_per_frame2=ma=ma-(above(treb,.5)*3.1415*.02*treb);
shape_3_per_frame3=
shape_3_per_frame4=mx=mx+(.0008*cos(ma));
shape_3_per_frame5=my=my+(.0008*sin(ma));
shape_3_per_frame6=
shape_3_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_3_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_3_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_3_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_3_per_frame11=
shape_3_per_frame12=x=mx;
shape_3_per_frame13=y=my;
shape_3_per_frame14=
shape_3_per_frame15=a=(above(bass+mid+treb,.2));
per_frame_init_1=zoom=1;
per_frame_init_2=xpos=0;
per_frame_init_3=ypos=0;
per_frame_1=decay=1;
per_frame_2=
per_frame_3=//vol= (bass+mid+treb)*0.55;
per_frame_4=vol=vol;
per_frame_5=
per_frame_6=
per_frame_7=mv_r = 0.5 + 0.4*sin(time*1.324);
per_frame_8=mv_g = 0.5 + 0.4*cos(time*1.371);
per_frame_9=
per_frame_10=
per_frame_11=
per_frame_12=
per_frame_13=zoom=1;
per_frame_14=
per_frame_15=musictime=musictime+vol;
per_frame_16=q4=sin(musictime*0.02)*0.3;
per_frame_17=q5=sin(musictime*0.01)*0.3;
per_frame_18=
per_frame_19=dx=sin(musictime*0.1)*0.01;
per_frame_20=dy=cos(musictime*0.069)*0.01;
per_frame_21=
per_frame_22=bb = bb*0.99 + bass*0.02;
per_frame_23=mm = mm*0.99 + mid*0.02;
per_frame_24=tt = tt*0.99 + treb*0.02;
per_frame_25=
per_frame_26=mx = max(max(bb,mm),tt);
per_frame_27=mn = min(min(bb,mm),tt);
per_frame_28=
per_frame_29=t1 = (bb-mn)/(mx-mn);
per_frame_30=t2 = (mm-mn)/(mx-mn);
per_frame_31=t3 = (tt-mn)/(mx-mn);
per_frame_32=
per_frame_33=v = 0.08;
per_frame_34=bm = bm + (t1-t2)*v;
per_frame_35=mt = mt + (t2-t3)*v;
per_frame_36=
per_frame_37=
per_frame_38=q26 = -bm; // rotation
per_frame_39=q27 = mt*2; // growth
per_pixel_1=myx = y-.5;
per_pixel_2=myy = x-0.25;
per_pixel_3=dy = 2*(2*myx*myy)+.15;
per_pixel_4=dx = 2*((myy*myy) - (myx*myx))+sin(time/4)/55+.04125 ;
warp_1=`#define sat saturate
warp_2=`#define snl sampler_noise_lq
warp_3=`static const float quality = 3, a = aspect.x/aspect.y, k1=16, k2 = 0.04, smod = q20, xmod=q22;
warp_4=`float3 rsl, rsl3, ret1, sky, mod,mod2;
warp_5=`float2 dz, uv0, uv1, uv2, uv3, uv4, uvc, dz1;
warp_6=`float  lav_gnd,lav_gnd2, smask, ripple, l,d,i,p;
warp_7=`static const float hory = q6, xyscale = q7, alti = q8;
warp_8=`static const float2 hor = texsize.zw*float2 (1.5,0), dir = float2 (q3,q4), modran = float2 (q15,q16);
warp_9=`static const float2 dpxy = float2 (q12, q13);
warp_10=`static const float3 mov = float3 (q10,q11,0);
warp_11=`
warp_12=`float2 noise2 (float2 uvi) {float2 tmp = 1; float s = 1; uvi*=xyscale*32;
warp_13=`  for (int n = 1; n <= 2; n +=1 ) {tmp *= 1-tex2D(snl,uvi*s); s*= 3;} return tmp;}
warp_14=`
warp_15=`float2 noise3 (float3 uvi, float3 mod) {float tmp = 1; float s = 2; float diff,path;
warp_16=`
warp_17=` tmp = (tex2D(sampler_noise_mq,uvi*xyscale*float2(1,.5)+modran.x).r-0.6)*mod.z*2.5; 
warp_18=`  diff = tmp;
warp_19=`  for (int n = 1; n <= 4; n +=1 ) {tmp += tex2D(snl,uvi.xy*s*xyscale)/s/2; s*= 3;}
warp_20=`  tmp = lerp (0.3,tmp,saturate(+pow(uvi.x*xmod,2)));
warp_21=`  tmp = lerp (0.2,tmp,1-pow(sin(smod*abs(uvi.x)+(uvi.y*.02+(1-tmp)*mod.x)),8));
warp_22=` return 1-pow (tmp,0.8+mod.y);}
warp_23=`
warp_24=`float3 rs_lav (float2 uvi, float berg) {  float z; float2 rs;
warp_25=`  z = 1/(uvi.y+hory)*(alti-berg*k1); 
warp_26=`  z *= z * k2;
warp_27=`  rs.x = uvi.x * a*z ; rs.y = z; 
warp_28=`  return float3(rs,z)+mov; }
warp_29=`
warp_30=`
warp_31=`shader_body {
warp_32=`uv = uv_orig; uv1 = uv-0.5;
warp_33=`lav_gnd=  -min (tex2D(sampler_fc_main,uv).b, tex2D(sampler_fc_main,uv+hor.yx*1.5).b);
warp_34=`rsl = rs_lav(uv1,lav_gnd); 
warp_35=`mod = tex2D(sampler_noise_hq,rsl.xy*xyscale+modran);
warp_36=`i=0, p=0;
warp_37=`for (int n=1; n <= quality; n++) {
warp_38=`  p =  ((lav_gnd+noise3 (rsl, mod))/quality);
warp_39=`  i += p;  lav_gnd -= p*0.1+i*0.07; rsl = rs_lav(uv1,lav_gnd);}
warp_40=`
warp_41=`l = saturate(-lav_gnd);
warp_42=`d= 2;
warp_43=`dz = -1/rsl.z*d*dir;
warp_44=`ripple = (noise3 (rsl,mod) - noise3 (rsl+float3 (dz,0),mod))*sat(rsl.z/16)*42;
warp_45=`ripple += ((noise2 (rsl-dz) - noise2 (rsl+dz))* (1-l))+0.05;
warp_46=`ripple = 1-exp(-ripple*2);
warp_47=`
warp_48=`ret = float3 (ripple, sqrt (rsl.z)*0.05, l);
warp_49=`
warp_50=`float tmp = dpxy.y + rsl.z;
warp_51=`uv.x += -(uv.x-0.5)*dpxy.y / tmp;
warp_52=`uv.y += (alti+l*k1) * (sqrt(k2/(tmp))-sqrt(k2/rsl.z));
warp_53=`
warp_54=`ret = lerp (ret, tex2D(sampler_fc_main,uv)-0.004, float3 (0.75,0,.2));
warp_55=`}
comp_1=`float2 complex_div(float2 numerator, float2 denominator){
comp_2=`   return float2( numerator.x*denominator.x + numerator.y*denominator.y,
comp_3=`                  numerator.y*denominator.x - numerator.x*denominator.y)/
comp_4=`          (denominator.x*denominator.x + denominator.y*denominator.y);
comp_5=`}
comp_6=`
comp_7=`float2 uv_polar(float2 domain, float2 center){
comp_8=`   float2 c = domain - center;
comp_9=`   float rad_hq = length(c);
comp_10=`   float ang_hq = atan2(c.x,c.y);
comp_11=`   return float2(ang_hq, rad_hq);
comp_12=`}
comp_13=`
comp_14=`float2 uv_polar_logarithmic(float2 domain, float2 center, int fins, float log_factor, float2 coord){
comp_15=`   float2 polar = uv_polar(domain, center);
comp_16=`   return float2(polar.x*fins+coord.x, log_factor*log(1/polar.y) + coord.y);
comp_17=`}
comp_18=`
comp_19=`float2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){
comp_20=`   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;
comp_21=`}
comp_22=`
comp_23=`float2 uv_bipolar_logarithmic(float2 domain, float2 northPole, float2 southPole, int fins, float log_factor, float2 coord){
comp_24=`   float2 help_uv = uv_moebius_transformation(domain, northPole, southPole, 1);
comp_25=`   return uv_polar_logarithmic(help_uv,0.5,fins,log_factor,coord)*float2(M_INV_PI_2,1);
comp_26=`}
comp_27=`
comp_28=`float2 uv_scale(float2 domain, float2 center, float2 scale){
comp_29=`   return center + (domain-center)*scale;
comp_30=`}
comp_31=`float2 uv_lens_half_sphere(float2 domain, float2 position, float radius, float refractivity){
comp_32=`   float2 polar = uv_polar(domain, position);
comp_33=`   float cone = saturate(1-polar.y/radius);
comp_34=`   float halfsphere = sqrt(1-pow(cone-1,2));
comp_35=`   float w = atan2(1-cone,halfsphere);
comp_36=`   float refrac_w = w-asin(sin(w)/refractivity);
comp_37=`   float refrac_d = 1-cone - sin(refrac_w)*halfsphere/cos(refrac_w);
comp_38=`   float2 refrac_uv =position+float2(sin(polar.x),cos(polar.x))*refrac_d*radius;
comp_39=`   bool mask =(length(domain-position)<radius);
comp_40=`   return !mask*domain + 
comp_41=`           mask*refrac_uv;
comp_42=`}
comp_43=`shader_body
comp_44=`{
comp_45=`
comp_46=`
comp_47=`
comp_48=`
comp_49=`
comp_50=`float2 uvo = uv;
comp_51=`uv = 0.5+(uv-0.5)*aspect.wz;
comp_52=`uv = uv_bipolar_logarithmic(uv, float2(0,0.5), float2(1,0.5), 4, 0.55, float2(q26,0.1*q27));
comp_53=`uv = 0.5 + (1.0 - abs( frac( uv * 0.5 ) * 2 - 1.0 )-0.5)*0.995; // Eo.S. mirror code with cutted borders
comp_54=`uv = uv_lens_half_sphere(uv, 0.5, 0.5, 3).yx;
comp_55=`uv = uv_bipolar_logarithmic(uv, float2(0,0.5), float2(1,0.5), 4, 0.55, float2(q26,0.1*q27)).yx;
comp_56=`uv = 0.5 + (1.0 - abs( frac( uv * 0.5 ) * 2 - 1.0 )-0.5)*0.995; // Eo.S. mirror code with cutted borders
comp_57=`ret = GetPixel(uv);
comp_58=`//MilkDrop3 Brightness Mode:
comp_59=`ret *= 1.8;
comp_60=`//MilkDrop3 Color Mode:
comp_61=`ret /= float3(2.7,0.3,-1.3);
comp_62=`//MilkDrop3 Burn Mode:
comp_63=`ret = lerp(ret,2,GetPixel(uv).z*1.36);
comp_64=`}

[SPRITE1_BEGIN]
SpriteName=sprites\lines1.jpg
SpriteColorKey=0x000000
SpriteLayer=1
SpriteBlend=1
SpriteAlpha=0.500000
SpriteBurn=1
SpriteX=-0.042500
SpriteY=0.442500
SpriteSX=0.180000
SpriteSY=0.180000
SpriteRot=0.000000
SpriteSpeed=0.000000
SpriteRepeatX=1.000000
SpriteRepeatY=1.000000
[SPRITE1_END]
