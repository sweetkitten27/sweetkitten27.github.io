Created with MILKDROP 3.30 on 16/01/2024 at 23:49:40
https://twitter.com/MilkDrop2077

blending_pattern=cercle
blending_progress=0.31
blending_direction=1
random_1=0.624797
random_2=0.954743
random_3=0.865989
random_4=0.837669
random_5=0.239973

[PRESET1_BEGIN]
NAME=martin - stratospheric turbulences3d nocut
MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=0.952
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.056
fWaveSmoothing=0.000
fWaveParam=-1.000
fModWaveAlphaStart=0.800
fModWaveAlphaEnd=0.200
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.200
wave_g=0.000
wave_b=1.000
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.100
ob_b=0.000
ob_a=0.300
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=1.850
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=0.700
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=128
wavecode_0_sep=120
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=1
wavecode_0_scaling=3.54480
wavecode_0_smoothing=0.13000
wavecode_0_r=0.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=0.000
wave_0_per_frame1=t1 = 0;
wave_0_per_point1=x = sample;
wave_0_per_point2=gmegabuf(t1) =  gmegabuf(t1)*0.5 + 0.5* (value1+value2) ;
wave_0_per_point3=t1 += 1;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=1
wavecode_1_scaling=0.89152
wavecode_1_smoothing=0.82000
wavecode_1_r=0.270
wavecode_1_g=0.180
wavecode_1_b=1.000
wavecode_1_a=0.400
wave_1_per_frame1=t1 = 1; t2=2;
wave_1_per_point1=zmax=18;
wave_1_per_point2=z = sample-reg60*1.5;
wave_1_per_point3=z = (z-int(z))*zmax;
wave_1_per_point4=
wave_1_per_point5=bs = 4096;
wave_1_per_point6=t1 = (t1%bs)*3036 + int(t1/bs);
wave_1_per_point7=t2 = (t2%bs)*3288 + int(t2/bs);
wave_1_per_point8=x= (t1%bs/bs-0.5)/z+0.5;
wave_1_per_point9=y= (t2%bs/bs-0.5)/z+0.5;
wave_1_per_point10=
wave_1_per_point11=a=(1-z/zmax)*0.65;
per_frame_init_1=n = 1500; loop (15000,megabuf(n) =0;gmegabuf(n) = 10; n+=1;);
per_frame_init_2=flen = 128; shapes = 16; reg01 = shapes;
per_frame_init_3=minbpm=300; maxbpm=500; num_res=200;
per_frame_init_4=slow = 1; r1=8; r2=1; run = 0; bvol_=0; dir = 1; tlen=2.5; ndir = 1; size_=1; vol_=1; certain = 1; movarg = rand(100);
per_frame_init_5=lc = rand(2)-1; tr1 = rand(5); tr2 = rand(5); r5 = rand(6); r9 = rand(1); vc_=rand(10); r3=2; tubes = pow(2,1+int(rand(3)));
per_frame_init_6=start = time; ray_=0;
per_frame_1=dec_f = 1-10/fps; dec_m = 1-3/fps; dec_s = 1-1/fps; dt=1/fps;
per_frame_2=
per_frame_3=maxind = 0; qavg = 0.1; i=0; 
per_frame_4=bvol = max(0.1,(bass+mid+treb)/3); bvol_=bvol_*dec_m + (1-dec_m)*bvol;
per_frame_5=Excite = (bvol-bvol_);
per_frame_6=loop (num_res,
per_frame_7=  n = i*8;
per_frame_8=  Freq  = (i/(num_res-1)+minbpm/(maxbpm-minbpm))*(maxbpm-minbpm)/60;
per_frame_9=  Feder = sqr(Freq*6.2832);
per_frame_10=  megabuf (n+4) = megabuf(n+1); megabuf (n+1) *= 1-0.25*dt; 
per_frame_11=  EC_Steps = int (8*Freq*dt)+1;
per_frame_12=  loop (EC_Steps, // Euler-Cauchy steps
per_frame_13=    Kraft = Excite - Feder*megabuf(n + 2) ;
per_frame_14=    megabuf (n+1) += Kraft        * dt/EC_Steps;
per_frame_15=    megabuf (n+2) += megabuf(n+1) * dt/EC_Steps;  );
per_frame_16=  beatcos = megabuf(n+1);  beatsin = megabuf(n+2)*Freq*6.2832;
per_frame_17=  quad = sqrt (pow(beatsin,2) + pow(beatcos,2));
per_frame_18=  megabuf (n+3) = megabuf(n+3) *dec_m +  quad* (1-dec_m);
per_frame_19=  if (megabuf(n+3) > megabuf (maxind*8+3), maxind =i,0);
per_frame_20=  qavg = qavg+pow (megabuf(n+3),2);
per_frame_21=  i += 1;);
per_frame_22=
per_frame_23=qavg = sqrt (qavg/num_res); 
per_frame_24=qdev = 0; i =0; loop (num_res, qdev += pow(megabuf(i+3)-qavg,2); i += 8; );
per_frame_25=qdev = sqrt (qdev/num_res);
per_frame_26=BPM =   (maxind/(num_res-1)+minbpm/(maxbpm-minbpm))*(maxbpm-minbpm);
per_frame_27=if (BPM > 200, BPM *= 0.5, 0);
per_frame_28=
per_frame_29=m1 = maxind*8;
per_frame_30=certain = certain * dec_m + (1-dec_m) * megabuf(m1+3)/qavg;
per_frame_31=dbl_beat = megabuf(m1+1) * megabuf (m1+4) < 0;
per_frame_32=sgl_beat = dbl_beat * (megabuf (m1+4) < 0);
per_frame_33=bcount += dbl_beat;is_rbeat  = dbl_beat && (bcount%2==0);
per_frame_34=bcount2 += is_rbeat;
per_frame_35=trel1 += BPM/60*dt/2;
per_frame_36=
per_frame_37=n = 0; vol = .0; bbase = 10000;
per_frame_38=loop (flen,
per_frame_39=  value = gmegabuf(n)/vol_;
per_frame_40=  trig = value > megabuf(bbase+n)*1.5*30/fps; 
per_frame_41=  megabuf (bbase+n) = value;
per_frame_42=  dec = if(trig,dec_f,dec_m); 
per_frame_43=  megabuf(n+5000) = megabuf(n+5000)*dec + (1-dec)*value;
per_frame_44=  vol = vol + pow(megabuf(n+5000),2);
per_frame_45=  n += 1;
per_frame_46=);
per_frame_47=
per_frame_48=vol = sqrt(vol);
per_frame_49=vol_ = dec_s*vol_ + (1-dec_s)*vol*7;
per_frame_50=
per_frame_51=// post smoothing
per_frame_52=n = 0;
per_frame_53=loop (flen,
per_frame_54=  value = megabuf(n+5000) * 5*n/(1+5*n);
per_frame_55=  dec = if (megabuf(4000+n)<=value,.9,.9);
per_frame_56=  dec = dec_f; 
per_frame_57=  megabuf(n+4000) = megabuf(n+4000)*dec+ (1-dec)*value;
per_frame_58=  n = n+1;
per_frame_59=);
per_frame_60=
per_frame_61=
per_frame_62=// Berechnung Ortskoordinaten aus Spektrum
per_frame_63=step = flen/shapes/2+1; 
per_frame_64=n = 2000; m = 4000+step; k=0; slope = 0.01; speed = 0.4/slope; size = 0;
per_frame_65=loop (shapes,
per_frame_66=   //rad, ang slope limitation
per_frame_67=   x0 = megabuf(m)-megabuf(m+1);
per_frame_68=   y0 = megabuf(m)-megabuf(m-1);
per_frame_69=   radi = sqrt (x0*x0+y0*y0);
per_frame_70=   angi = atan2 (x0,y0);
per_frame_71=   j=n+4000;
per_frame_72=   megabuf(j)   +=min(slope, max (-slope, radi-megabuf(j)))*speed/fps; 
per_frame_73=   megabuf(j+1) +=min(10*slope, max (-10*slope, angi-megabuf(j+1)))*speed/fps; 
per_frame_74=   megabuf(n)   = megabuf(j)*cos(megabuf(j+1));
per_frame_75=   megabuf(n+1) = megabuf(j)*sin(megabuf(j+1));
per_frame_76=  size += pow (megabuf(n),2)+pow (megabuf(n+1),2);
per_frame_77=  dec = if (bvol2 > bvol,dec_m, dec_m);
per_frame_78=  bvol2 = dec*bvol2 + (1-dec)*bvol;
per_frame_79=  megabuf(n+2) = 0.04/sqrt(pow(megabuf(n),2) + pow (megabuf(n+1),2));
per_frame_80=  m = m + step; n = n+8; k= k+1;
per_frame_81=);
per_frame_82=
per_frame_83=//Projektion
per_frame_84=n = 1000; m = 2000;
per_frame_85=size_ = size*sec_s + (1-dec_s)*sqrt(size)*shapes*7;
per_frame_86=loop (shapes,
per_frame_87=  gmegabuf(n) = megabuf(m)/megabuf(m+2)/size_;
per_frame_88=  gmegabuf(n+1) = megabuf(m+1)/megabuf(m+2)/size_;
per_frame_89=  gmegabuf(n+2) = megabuf(m+2);
per_frame_90=  n = n+8; m = m+8;
per_frame_91=);
per_frame_92=
per_frame_93=reg13 = 1.7+0.25*sqrt(mid_att+bass_att); //shp rad
per_frame_94=
per_frame_95=trig = (bcount%64 == 0) && dbl_beat;
per_frame_96=if (trig, 
per_frame_97=  r1 = 4+int (rand(8));
per_frame_98=  r2 = max (2,int ((r1-2)*rand(1)));
per_frame_99=  r3 = -1*pow (2, int(rand(2)));
per_frame_100=  s1 = pow(2,int(rand(4)));
per_frame_101=  s2 = sqrt(rand(1.5))*s1;
per_frame_102=  if (rand(1)>0.5,s1=-s1,0);
per_frame_103=  s3 = -1*pow (2, int(rand(4)));
per_frame_104=  ndir = if (rand(1)<0.2,-1,1);
per_frame_105=,0);
per_frame_106=
per_frame_107=run = if (bvol_<0.4,0,if(bvol_>0.7,1,run));
per_frame_108=slow = if (certain<1.7,1,if(certain>2.5,0,slow));
per_frame_109=
per_frame_110=dir_ = dir_*dec_f+dir*5*(1-dec_f);
per_frame_111=q4 = ndir;
per_frame_112=movarg = min(4,(2+certain*2)/3.5)*dir_;
per_frame_113=movst  += (5+ movarg)*0.02*dt;
per_frame_114=movarg *= dt;
per_frame_115=reg60 = movst;
per_frame_116=tmove += movarg;
per_frame_117=q19=tmove/2;
per_frame_118=
per_frame_119=//mask shift x
per_frame_120=q20 = 1/r1;  //Anteil
per_frame_121=q22 = q20*r2; //Limit
per_frame_122=trelx += BPM/120/q20*run*dt* (1-0.5*slow) * r3 + ndir*movarg*run; //ungef. Bew. Korr
per_frame_123=q21 = q20*int(trelx); //phase
per_frame_124=
per_frame_125=//mask shift y
per_frame_126=q25 = s1;  //Divisor, 1,2,3,4,6 bei 12 tubes
per_frame_127=q26 = s2;  //Narrow
per_frame_128=trely += BPM/120/3*2*q25*s3*run*dt* (1-0.5*slow);
per_frame_129=q27 = int(trely)/q25;  //phase
per_frame_130=
per_frame_131=q10 = trel1;
per_frame_132=trig = (bcount%4==0) && dbl_beat;
per_frame_133=tbers = max(0,if (bers, tbers+dt, tbers-dt/2));
per_frame_134=tber2 = max(0,if (ber2, tber2+dt, tber2-dt/2));
per_frame_135=vc = certain+bvol*0.25;
per_frame_136=vc_=dec_s*vc_ + (1-dec_s)*max(0,certain-2);
per_frame_137=if (vc > 5.9+tbers, bers=1, if (vc < 4.5+tbers/5, bers=0;,0));
per_frame_138=if (vc > 4.5+tber2, ber2=1, if (vc < 3+tber2/5, ber2=0;,0));
per_frame_139=
per_frame_140=q5 = sqrt(tubes)*0.025*r9+0.005;
per_frame_141=q6 = tubes;
per_frame_142=q7 = tlen;
per_frame_143=q17=ddx; q18 = ddy; 
per_frame_144=ber2_ = ber2_*dec_s + (1-dec_s)*ber2;
per_frame_145=reg10 = min(1,pow (certain/5,2)) * ber2_; //flash
per_frame_146=
per_frame_147=reg32 = aspecty;
per_frame_148=q31 = reg51;
per_frame_149=
per_frame_150=trig = (bcount%50==0) && dbl_beat;
per_frame_151=if (trig,lc=rand(2)-1.2; lrot=rand(vc_*5)-vc_*2; lve=rand(6); ray=(rand(60)<vc+30*ray), 0);
per_frame_152=ray_ = dec_s*ray_+(1-dec_s)*ray;
per_frame_153=q2 = lc;
per_frame_154=q12 = ray_*1.2;;
per_frame_155=
per_frame_156=q1=lrot*q19*2; 
per_frame_157=q2=lc;
per_frame_158=q3=lve;
per_frame_159=
per_frame_160=tr1 += vc_*dt*0.05;
per_frame_161=tr2 += vc_*pow(sin(tr1),1)*0.5*dt;
per_frame_162=q8 = tr2;
per_frame_163=ramp = 0.5*min(1,vc_*0.25)*pow(cos(tr2*(0.5*sin(r5+time*0.053))),5);
per_frame_164=q9 = ramp+0.95;
per_frame_165=q11 = (1+mid_att/2)*.7;
per_frame_166=q15 = bvol_;
per_frame_167=rot = 0.0; zoom = 1+movarg*0.5; warp = 0; dx = 0; dy = 0;
per_frame_168=monitor = bpm;
warp_1=`// by LamersAss, V1 (28/5/2022)
warp_2=`
warp_3=`shader_body
warp_4=`{
warp_5=`  float3 _fx_vol = float3( bass_att, mid_att, treb_att )/6;
warp_6=`
warp_7=`  for ( int i = 0; i < 3; i++ )
warp_8=`  {
warp_9=`    _fx_vol[i] = ( min( 1., _fx_vol[i] ) * 1.7 )
warp_10=`                 + max( .0, _fx_vol[i] - 1. );
warp_11=`    _fx_vol[i] = min( 2.46, _fx_vol[i] );
warp_12=`  }
warp_13=`
warp_14=`  _fx_vol += rot_f3[0] * .1;
warp_15=`  _fx_vol *= .07;
warp_16=`  _fx_vol *= 1.9;
warp_17=`  _fx_vol += 0.022;
warp_18=`
warp_19=`  float _fx_decay = fps * 0.015786;
warp_20=`  float _fx_rad = length( float2( 
warp_21=`    ( uv.x - .5 ) * aspect.x, 
warp_22=`    ( uv.y - .5 ) * aspect.y ) );
warp_23=`  float _fx_zoom = max( 0, _fx_rad - .12 ) * .028;
warp_24=`  
warp_25=`  _fx_zoom *= 1. + max( 0, ( cos( ang * 4 ) * .7 ) - .4 );
warp_26=`
warp_27=`  float2 _fx_prevframe = uv_orig;
warp_28=`  _fx_prevframe.x += ( _fx_zoom * aspect.y ) * ( uv_orig.x > .5 ? -1. : 1. );
warp_29=`  _fx_prevframe.y += ( _fx_zoom * aspect.x ) * ( uv_orig.y > .5 ? -1. : 1. );
warp_30=`
warp_31=`  ret = tex2D( sampler_main, _fx_prevframe ) * _fx_decay;
warp_32=`
warp_33=`  float _fx_width = ( _fx_rad * .04 ) + ( vol * .004 );
warp_34=`  float _fx_spinmult = 600.;
warp_35=`
warp_36=`  for ( int i = 0; i < 3; i++ )
warp_37=`    if ( _fx_rad > ( _fx_vol[i] - _fx_width ) 
warp_38=`      && _fx_rad < ( _fx_vol[i] + _fx_width ) )
warp_39=`      ret[i] = max( ret[i],
warp_40=`        ( 12. * _fx_vol[i] ) *
warp_41=`        + ( 12. * cos( ang + ( _fx_spinmult * _fx_vol[i] ) ) )
warp_42=`     );
warp_43=`
warp_44=`  float3 _fx_glow_intens = float3(-2.7,0.3,2.5);
warp_45=`  float3 _fx_glow_vol = ( _fx_vol * 0.92 ) * max( 0, _fx_rad - .2 );
warp_46=`
warp_47=`  for ( int i = 0; i < 3; i++ )
warp_48=`    ret[i] = max( ret[i], _fx_glow_vol[i] * _fx_glow_intens[i] );
warp_49=`}
comp_1=`shader_body
comp_2=`{
comp_3=`
comp_4=`float2 uv2 = uv;
comp_5=`uv2.x=1-uv2.x;
comp_6=`
comp_7=`    float2 d  = texsize.zw*4;
comp_8=`    float2 d2 = texsize.zw*4;
comp_9=`
comp_10=`    float3 dx  = ( GetBlur1(uv +float2(1,0)*d )-GetBlur1(uv2-float2(1,0)*d2) );
comp_11=`    float3 dx2 = ( GetBlur1(uv2+float2(1,0)*d2)-GetBlur1(uv -float2(0,1)*d ) );
comp_12=`
comp_13=`    float3 dy  = ( GetBlur1(uv2+float2(0,1)*d2)-GetBlur1(uv -float2(1,0)*d ) );
comp_14=`    float3 dy2 = ( GetBlur1(uv +float2(0,1)*d )-GetBlur1(uv2-float2(0,1)*d2) );
comp_15=`
comp_16=`
comp_17=`float2 uv_bg  = uv2 - float2(dx2.y,dy2.y)*texsize.zw*16;
comp_18=`float2 uv_bg2 = uv  - float2(dx.y ,dy.y )*texsize.zw*16;
comp_19=`
comp_20=`        ret = (GetBlur2(uv_bg )-GetBlur1(uv_bg2)*1+GetPixel(uv_bg )*0.9 + (-dx.y  + dy.y )*0.4).y*0.8*float3(1.0,1.1,1.2);
comp_21=`float3 ret2 = (GetBlur2(uv_bg2)-GetBlur1(uv_bg )*1+GetPixel(uv_bg2)*0.9 + (-dx2.y + dy2.y)*0.4).y*0.8*float3(1.2,1.0,1.1);
comp_22=`
comp_23=`float2 uv_m  = uv2 - float2(dx2.x,dy.x )*texsize.zw*8;
comp_24=`float2 uv_m2 = uv  - float2(dx.x ,dy2.x)*texsize.zw*8;
comp_25=`
comp_26=`ret  = lerp(ret , 2*float3(0.0,0.5,1.0), GetBlur3(uv_m2 - float2(dx2.y,dy.y )*0.4).x*0.4);
comp_27=`ret2 = lerp(ret2, 2*float3(0.5,1.0,0.0), GetBlur3(uv_m  - float2(dx.y ,dy2.y)*0.4).x*0.4);
comp_28=`
comp_29=`ret  = lerp(ret , 2*float3(0.5,1.0,1.0), GetBlur2(uv_m  - float2(dx.y ,dy2.y)*0.2).x*0.4);
comp_30=`ret2 = lerp(ret2, 2*float3(1.0,0.5,1.0), GetBlur2(uv_m2 - float2(dx2.y,dy.y )*0.2).x*0.4);
comp_31=`
comp_32=`ret = lerp(ret, 2*float3(1,1,0.8), GetBlur1(uv_m - float2(dx.y,dy.y)*0.1).x*0.2);
comp_33=`//ret = lerp(ret, float3(0.5,0,1), GetPixel(uv_m).x*0.4);
comp_34=`
comp_35=`//ret = .7-ret2;
comp_36=`//ret2=.7-ret;
comp_37=`//ret-=ret2;
comp_38=`//MilkDrop3 Color Mode:
comp_39=`ret /= float3(2.2,2.4,2.3);
comp_40=`//MilkDrop3 Solarize Mode:
comp_41=`ret = ret*(1-ret)*4;
comp_42=`}
[PRESET1_END]

[PRESET2_BEGIN]
NAME=amandio c - savage garden sdfx
[preset00]
fRating=1.000
fGammaAdj=1.630
fDecay=1.000
fVideoEchoZoom=0.907
fVideoEchoAlpha=0.000
nVideoEchoOrientation=1
nWaveMode=6
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=1
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.000
fWaveScale=0.000
fWaveSmoothing=0.500
fWaveParam=0.000
fModWaveAlphaStart=0.500
fModWaveAlphaEnd=1.000
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=1.00000
fShader=0.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.00000
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.500
wave_b=0.500
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=1.000
ob_g=1.000
ob_b=1.000
ob_a=1.000
ib_size=0.002
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
shapecode_0_enabled=1
shapecode_0_sides=20
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=11
shapecode_0_x=0.550
shapecode_0_y=0.500
shapecode_0_rad=0.13031
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.27705
shapecode_0_r=0.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=0.500
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=0.000
shapecode_0_border_g=0.700
shapecode_0_border_b=0.100
shapecode_0_border_a=0.000
shape_0_per_frame1=x= rand(1);
shape_0_per_frame2=y= rand(1);
shapecode_1_enabled=1
shapecode_1_sides=20
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1024
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.04963
shapecode_1_ang=0.00000
shapecode_1_tex_ang=4.08407
shapecode_1_tex_zoom=5.76110
shapecode_1_r=0.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=0.700
shapecode_1_border_b=0.100
shapecode_1_border_a=0.000
shape_1_per_frame1=i= 1+instance;        c= i>1;
shape_1_per_frame2=
shape_1_per_frame3=
shape_1_per_frame4=p += q3*(sin(i*q1)-cos(i*q2))/i+q2;     p *= c;
shape_1_per_frame5=
shape_1_per_frame6=x1 += sin(p*q4);      x1 *= c;
shape_1_per_frame7=y1 += cos(p);         y1 *= c;
shape_1_per_frame8=
shape_1_per_frame9=
shape_1_per_frame10=z=.005;
shape_1_per_frame11=x= z*x1/q8 + q5;
shape_1_per_frame12=y= z*y1    + q6;      
shape_1_per_frame13=
shape_1_per_frame14=
shape_1_per_frame15=r= q7;
shape_1_per_frame16=g= r*r;
shape_1_per_frame17=b= .3*g;
shape_1_per_frame18=
shape_1_per_frame19=
shape_1_per_frame20=rad = .005;
per_frame_1=
per_frame_2=q1= rand(500);  
per_frame_3=q2= rand(500);  
per_frame_4=q3= rand(500);  
per_frame_5=q4= pow(-1,q3%2);
per_frame_6=
per_frame_7=q5= rand(1);
per_frame_8=q6= rand(1);
per_frame_9=q7= rand(1);
per_frame_10=
per_frame_11=q8=aspecty;       
per_frame_12=
[PRESET2_END]
