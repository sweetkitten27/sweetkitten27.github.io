MILKDROP_PRESET_VERSION=300
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=2
[preset00]
fRating=4.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=6
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.004
fWaveScale=0.295
fWaveSmoothing=0.000
fWaveParam=-0.440
fModWaveAlphaStart=1.000
fModWaveAlphaEnd=1.000
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=1.000
wave_g=1.000
wave_b=1.000
wave_x=0.500
wave_y=0.040
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.250
mv_r=1.000
mv_g=0.500
mv_b=0.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=2.02310
wavecode_0_smoothing=0.00000
wavecode_0_r=0.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_init1=t2 = 0;
wave_0_init2=t3 = 0;
wave_0_init3=t4 = 0;
wave_0_init4=cl = 0;
wave_0_per_frame1=vol = bass*8 + mid*5 + treb*3;
wave_0_per_frame2=m = m*0.97 + vol*0.08;
wave_0_per_frame3=monitor = vol;
wave_0_per_frame4=beat = above(vol,res)*above(vol,m)*above(vol,16);
wave_0_per_frame5=diff = (1-beat)*diff + beat*(vol-res);
wave_0_per_frame6=res = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);
wave_0_per_frame7=res = max(0,res);
wave_0_per_frame8=b = beat;
wave_0_per_frame9=g = 1-beat;
wave_0_per_point1=tt3 = tt3*0.6 + (value1)*1;
wave_0_per_point2=tt2 = tt2*0.7 + tt3*0.2;
wave_0_per_point3=tt1 = tt1*0.8 + tt2*0.1;
wave_0_per_point4=d = d*0.9 + tt1*0.2;
wave_0_per_point5=
wave_0_per_point6=y = 0.5 + d*sample*(1-sample)*4;
wave_0_per_point7=x =  -0.05 + sample*1.1;
per_frame_init_1=n = 0;
per_frame_init_2=loop (100000,megabuf(n)=0;gmegabuf(n)=0;n += 1;);
per_frame_init_3=
per_frame_init_4=posx = rand(10); posy = rand(10);
per_frame_init_5=ranx = rand (1); rany = rand(1);
per_frame_init_6=ranh = rand(10);
per_frame_init_7=t0 = time;
per_frame_init_8=st = 0.5; st_=0.5;
per_frame_1=st = max (0, st-0.2/fps);
per_frame_2=dec = 1-0.5/fps;
per_frame_3=st_ = st_* (dec) + (1-dec)*st;
per_frame_4=
per_frame_5=//dir
per_frame_6=dir = 0.7*sin(time*.0162+rany*6);
per_frame_7=q2 = dir+0.5; 
per_frame_8=q3 = sin(dir);
per_frame_9=q4 = cos(dir);
per_frame_10=
per_frame_11=//scaling plane
per_frame_12=q7 = 0.002;
per_frame_13=
per_frame_14=//movement
per_frame_15=posx = time*0.0003;
per_frame_16=posy = time*0.004;
per_frame_17=q10 = posx;
per_frame_18=q11 = posy;
per_frame_19=
per_frame_20=//start ran for warp mod 
per_frame_21=q15 = ranx;
per_frame_22=q16 = rany;
per_frame_23=
per_frame_24=test = (t0-time)*0.047-3.14/2;
per_frame_25=view = 0.7 + min(1, max (-1, 2*sin(test)))*0.17;
per_frame_26=
per_frame_27=//Alti
per_frame_28=q8 = 4 + 3* sin(test) + (view-0.55)*16;
per_frame_29=
per_frame_30=//hory (Kippung)
per_frame_31=q6 = view * (1-st_) + st_*2;
per_frame_32=
per_frame_33=//q6  = 0.55;
per_frame_34=monitor = view;
warp_1=`#define sat saturate
warp_2=`sampler sampler_pw_noise_lq;
warp_3=`static const float quality = 4;
warp_4=`float3 rsl, rsl3, ret1, sky, mod;
warp_5=`float2 dz, uv0, uv1, uv2, uv3, uv4, uvc, dz1;
warp_6=`float  lav_gnd,lav_gnd2, smask, ripple, l,d,i,p;
warp_7=`static const float hory = q6, xyscale = q7, alti = q8;
warp_8=`static const float2 hor = texsize.zw*float2 (1.5,0), dir = float2 (q3, q4), modran = float2 (q15,q16);
warp_9=`static const float3 mov = float3 (q10,q11,0);
warp_10=`float comb (float2 uvi) {return dot (tex2D(sampler_noise_lq, uvi).yx, float2(1,1));}
warp_11=`
warp_12=`float2 noise2 (float2 uvi) {float2 tmp = 1; float s = 1;
warp_13=`  for (int n = 1; n <= 2; n +=1 ) {tmp *= 1-tex2D(sampler_noise_lq,uvi*s); s*= 3;}
warp_14=`  return tmp;}
warp_15=`
warp_16=`
warp_17=`float2 noise3 (float3 uvi, float3 mod) {uvi *= 0.16; float2 tmp = 1; float s = 1; float diff = 0;
warp_18=`  uvi.xy+= modran*3;
warp_19=`  for (int n = 1; n <= 2; n +=1 ) {tmp *= sat(1-tex2D(sampler_noise_lq,uvi*s)*(0.8+mod.y/2)/s); s*= 3+tmp*0.002*mod.z;}
warp_20=`  for (int n = 1; n <= 3; n +=1 ) {tmp *= sat(1-tex2D(sampler_noise_lq,uvi*s)*(0.8+mod.y/2)/s); s*= 3;}
warp_21=`  diff = sat (16-2*uvi.z-20000* abs (tmp.x-0.4)) ;
warp_22=`  tmp  -= diff*0.009 ;
warp_23=`  return 1-pow (tmp,0.8+mod.x);}
warp_24=`
warp_25=`float2 enoise3 (float2 uvi, float3 mod) {uvi/=6; float2 tmp = 1; float s = 1;
warp_26=`  for (int n = 1; n <= 6; n +=1 ) {tmp *= 1-tex2D(sampler_noise_lq,uvi*s)/(0.8+mod.y)/s; s*= 2.9;}
warp_27=`  if ((tmp.x > 0.398) && (tmp.x < 0.402)) {tmp = 0.398;}
warp_28=`  return 1-pow (tmp,.8+2*mod.x);}
warp_29=`
warp_30=`float3 rs_lav (float2 uvi, float berg) {  float z; float2 rs;
warp_31=`  z = 1/(uvi.y+hory)*(alti-berg*16); //z = clamp(z,0,4/xyscale);
warp_32=`  rs.x = uvi.x * 2*z ; rs.y = z; 
warp_33=`  return float3(rs*xyscale,z); }
warp_34=`
warp_35=`
warp_36=`shader_body {
warp_37=`uv1=uv-0.5;
warp_38=`lav_gnd=  -min (tex2D(sampler_fc_main,uv).b, tex2D(sampler_fc_main,uv+hor.yx).b);
warp_39=`
warp_40=`rsl = rs_lav(uv1,lav_gnd)+mov; 
warp_41=`mod = tex2D(sampler_noise_mq,rsl.xy*.043+modran);
warp_42=`
warp_43=`i=0, p=0;
warp_44=`for (int n=1; n <= quality; n++) {
warp_45=`  p =  ((lav_gnd+noise3 (rsl, mod))/quality);
warp_46=`  i += p;
warp_47=`  lav_gnd -= p*0.1+i*0.2; 
warp_48=`  rsl = rs_lav(uv1,lav_gnd)+mov; 
warp_49=`}
warp_50=`l = saturate(-lav_gnd);
warp_51=`
warp_52=`d=1.8;
warp_53=`dz = -1.5/rsl.z*xyscale*d*dir;
warp_54=`
warp_55=`rsl3 = rsl * 8 + l*0;
warp_56=`ripple = ((noise2 (rsl3-dz) - noise2 (rsl3+dz))* (1-l))*1+0.02;
warp_57=`
warp_58=`ripple = (1/rsl.z*ripple+noise3 (rsl-float3 (dz,0),mod) - noise3 (rsl+float3 (dz,0),mod))*(1-l)/d/sqrt(50+rsl.z)*2000;
warp_59=`
warp_60=`ripple = 1-exp(-ripple);
warp_61=`
warp_62=`ret.r = ripple;
warp_63=`ret.b = l;
warp_64=`ret = lerp(ret,GetBlur1(uv),0.1);
warp_65=`ret.g = rsl.z*xyscale*4;
warp_66=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    float2 d = texsize.zw*4;
comp_4=`    float3 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );
comp_5=`    float3 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );
comp_6=`float2 uv_bg = uv - float2(dx.y,dy.y)*texsize.zw*16;
comp_7=`ret = (GetBlur2(uv_bg)-GetBlur1(uv_bg)*1+GetPixel(uv_bg)*0.9 + (-dx.y + dy.y)*0.4).y*0.8*float3(1,1.1,1.2);
comp_8=`
comp_9=`float2 uv_m = uv - float2(dx.x,dy.x)*texsize.zw*8;
comp_10=`ret = lerp(ret, 2*float3(0,0.5,1), GetBlur3(uv_m - float2(dx.y,dy.y)*0.4).x*0.4);
comp_11=`ret = lerp(ret, 2*float3(0.5,1,1), GetBlur2(uv_m - float2(dx.y,dy.y)*0.2).x*0.4);
comp_12=`ret = lerp(ret, 2*float3(1,1,0.8), GetBlur1(uv_m - float2(dx.y,dy.y)*0.1).x*0.2);
comp_13=`//ret = lerp(ret, float3(0.5,0,1), GetPixel(uv_m).x*0.4);
comp_14=`}

[SPRITE1_BEGIN]
SpriteName=sprites\cube5.png
SpriteColorKey=0x000000
SpriteLayer=0
SpriteBlend=3
SpriteAlpha=0.500000
SpriteBurn=1
SpriteX=0.000000
SpriteY=0.000000
SpriteSX=-0.680000
SpriteSY=-0.680000
SpriteRot=2.000000
SpriteSpeed=0.400000
SpriteRepeatX=1.000000
SpriteRepeatY=1.000000
code_1=new_scale=1.0+0.02*bass_att;
code_2=sx=new_scale;
code_3=sy=new_scale;
[SPRITE1_END]
