MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=5.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=2
bAdditiveWaves=0
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.012
fWaveSmoothing=0.900
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.500
wave_g=0.400
wave_b=0.300
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.400
ob_g=0.200
ob_b=0.200
ob_a=0.100
ib_size=0.040
ib_r=0.620
ib_g=0.550
ib_b=0.330
ib_a=0.000
nMotionVectorsX=3.000
nMotionVectorsY=2.000
mv_dx=0.020
mv_dy=-0.020
mv_l=0.150
mv_r=0.490
mv_g=0.480
mv_b=0.300
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=0.600
wavecode_0_g=0.300
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=n=sample*6.283 + q7*0.0015;
wave_0_per_point2=tm=time*0.1;
wave_0_per_point3=
wave_0_per_point4=phs=sin(n*50);
wave_0_per_point5=
wave_0_per_point6=xp=sin(n+phs);
wave_0_per_point7=yp=cos(n+phs);
wave_0_per_point8=
wave_0_per_point9=z=sin(n*3 + tm) * sin(n*7-tm);
wave_0_per_point10=
wave_0_per_point11=xp=xp*z;
wave_0_per_point12=yp=yp*z;
wave_0_per_point13=
wave_0_per_point14=x=xp*0.3 + 0.5;
wave_0_per_point15=y=yp*0.3*1.3 + 0.5;
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=1
shapecode_0_sides=13
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.46753
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.17258
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=0.990
shapecode_0_g2=0.990
shapecode_0_b2=0.990
shapecode_0_a2=0.000
shapecode_0_border_r=0.820
shapecode_0_border_g=0.720
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=tm=q6;
shape_0_per_frame2=
shape_0_per_frame3=x=0.5 + sin(tm)*0.3;
shape_0_per_frame4=y=0.5 + cos(tm*0.5)*0.4;
shape_0_per_frame5=
shape_0_per_frame6=ang=sin(tm*0.36)*3
shape_0_per_frame7=
shapecode_1_enabled=1
shapecode_1_sides=8
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.35738
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.55045
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=tm=q6;
shape_1_per_frame2=
shape_1_per_frame3=x=0.5 + sin(tm + 0.5)*0.3;
shape_1_per_frame4=y=0.5 + cos(tm*0.5)*0.4;
shape_1_per_frame5=
shape_1_per_frame6=ang=sin(tm*0.36)*3
shapecode_2_enabled=1
shapecode_2_sides=8
shapecode_2_additive=1
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.46290
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.500
shapecode_2_b=0.000
shapecode_2_a=0.040
shapecode_2_r2=1.000
shapecode_2_g2=0.300
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=0.000
shapecode_2_border_g=0.000
shapecode_2_border_b=0.000
shapecode_2_border_a=0.000
shape_2_per_frame1=tm=q6;
shape_2_per_frame2=
shape_2_per_frame3=x=0.5 + sin(tm + 1.4)*0.3;
shape_2_per_frame4=y=0.5 + cos(tm*0.5 + 0.3)*0.4;
shape_2_per_frame5=
shape_2_per_frame6=ang=sin(tm*0.36)*3
shapecode_3_enabled=1
shapecode_3_sides=29
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.46753
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=2.13022
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=0.990
shapecode_3_g2=0.990
shapecode_3_b2=0.990
shapecode_3_a2=0.650
shapecode_3_border_r=0.800
shapecode_3_border_g=0.500
shapecode_3_border_b=1.000
shapecode_3_border_a=1.000
shape_3_per_frame1=tm=q6;
shape_3_per_frame2=
shape_3_per_frame3=x=0.5 + sin(tm)*0.001;
shape_3_per_frame4=y=0.5 + cos(tm*0.5)*0.001;
shape_3_per_frame5=
shape_3_per_frame6=a=0.5 + min(q8,1)*0.5
per_frame_init_1=n = 0; loop (30000, megabuf(n)=0; gmegabuf(n)=0; n +=1; );
per_frame_init_2=
per_frame_init_3=MINBPM = 30; MAXBPM = 160; num_res = 30; 
per_frame_init_4=index = 0;
per_frame_init_5=loop (num_res,
per_frame_init_6=  n = index*12;
per_frame_init_7=  BPM      = minbpm * pow(maxbpm/minbpm,index/(num_res-1));
per_frame_init_8=  megabuf(n) = BPM;
per_frame_init_9=  index += 1;
per_frame_init_10=);
per_frame_init_11=
per_frame_init_12=pi = 3.1416;
per_frame_init_13=start = rand(5)-5;
per_frame_init_14=ran1  = rand (4) -2;
per_frame_1=dt = min (1/fps,0.1) ; //Stability !
per_frame_2=dec_f = 0.8; dec_m = 1 - 4*dt; dec_s = 1 - 1.25*dt;
per_frame_3=start = start * dec_m + (1-dec_m);
per_frame_4=vol =  bass+mid+treb; avg = avg*dec_s + vol*(1-dec_s);
per_frame_5=excite = atan ((vol-avg))*1.4;
per_frame_6=
per_frame_7=is_beat = above(vol, 1.5*avg + 8*peak) * above (time, tc0+.25);
per_frame_8=tc0 = if (is_beat, time,tc0);
per_frame_9=trig = is_beat * (beatct%8==0); beatct += is_beat;
per_frame_10=peak = if (is_beat,1,peak*dec_m);
per_frame_11=bindex += is_beat;
per_frame_12=trig = is_beat * (bindex%16==0);
per_frame_13=vc = vc*dec_f + (1-dec_f) * excite*0.06;
per_frame_14=
per_frame_15=pu = dec_f*pu + trig*vol/3; pu_ = dec_f*pu_+(1-dec_f)*pu; push=pu_+vc*0;
per_frame_16=bindex2 += trig;
per_frame_17=
per_frame_18=if (trig, ran1 = sin(rand (100))*2+0.5, 0);
per_frame_19=prog += min(int (bindex/30)-prog,0.1)*dt*20;
per_frame_20=prog_ = prog_*dec_m + (1-dec_m) * sin (pi/2*prog) ;
per_frame_21=prog2 +=min(0.2, max (-0.2,bindex-prog2))*dt*16;
per_frame_22=
per_frame_23=index=0; maxquad = 0.2;
per_frame_24=loop (num_res, n = index*12;  omega=megabuf(n) * 6.2832/60;
per_frame_25=  megabuf (n+1) *= 1-0.29*dt; 
per_frame_26=  EC_Steps = int (12*omega*dt)+1; //10=ok, aber hier nur wenige res
per_frame_27=  loop (EC_Steps, // Euler-Cauchy 
per_frame_28=    megabuf (n+1) += (excite - sqr(omega)*megabuf(n+2)) * dt/EC_Steps;
per_frame_29=    megabuf (n+2) += megabuf(n+1) * dt/EC_Steps);
per_frame_30=  beatcos  = megabuf(n+1);  beatsin = megabuf(n+2)*omega;
per_frame_31=  quad     = sqrt (pow(beatsin,2) + pow(beatcos,2)) ;
per_frame_32=  if (maxquad < quad,  maxquad = quad, 0);
per_frame_33=  megabuf (n+3) = megabuf(n+3) *dec_m +  quad* (1-dec_m);
per_frame_34=//  megabuf (n+4) = beatcos * pow(1-index/num_res,1);
per_frame_35=  megabuf (n+4) = megabuf (n+4)*dec_s + beatsin * omega*dt* pow(1-index/num_res,1);
per_frame_36=  megabuf (n+5) = beatsin * pow(1-index/num_res,1);;
per_frame_37=  megabuf (n+8) = gmegabuf (10000+n) ; //size pusher
per_frame_38=  index += 1;
per_frame_39=);
per_frame_40=
per_frame_41=index = 0; maxind = 0;
per_frame_42=loop (num_res,
per_frame_43=  n = 12*index;
per_frame_44=  if (gmegabuf(n+3) > gmegabuf(maxind+3) ,  maxind = n, 0);
per_frame_45=index+=1);
per_frame_46=BPM      = minbpm * pow(maxbpm/minbpm,maxind/12/(num_res-1));
per_frame_47=ctime += BPM/60*dt*pi;
per_frame_48=
per_frame_49=//Buffer !
per_frame_50=size = num_res*12;
per_frame_51=delay = min (12, max (3, int (6*40*dt))); delay = 5; wave = 0;
per_frame_52=n = 4*delay; loop (4*delay, memcpy (n*size, (n-1)*size, size); n -= 1);
per_frame_53=
per_frame_54=//Pusher Queue
per_frame_55=n = num_res;
per_frame_56=loop (num_res, 
per_frame_57=  gmegabuf (10000+n*12) = gmegabuf(10000+(n-1)*12); //size
per_frame_58=  gmegabuf (10001+n*12) = gmegabuf(10001+(n-1)*12); //col
per_frame_59=  gmegabuf (10002+n*12) = gmegabuf(10002+(n-1)*12); //smod ?
per_frame_60=n-=1;);
per_frame_61=gmegabuf (10000) = push; //size
per_frame_62=gmegabuf (10001) = bindex2*1.8; //col
per_frame_63=//gmegabuf (10002) = min(2,max(-1,8*cos(ctime/16)));
per_frame_64=sm = sm*dec_m + (1-dec_m) * ran1;
per_frame_65=gmegabuf (10002) = sm;
per_frame_66=test = gmegabuf(10002);
per_frame_67=
per_frame_68=n = 0; imax = 0;
per_frame_69=loop (num_res,
per_frame_70=  t1 += abs(megabuf(n*12+4))*dt/12 * (prog_ + (1-abs(prog_))* min(1,max(-1,2*sin(t1))));
per_frame_71=  t2 += abs(megabuf(n*12+5))*dt/6 * (prog_ + (1-abs(prog_))* min(1,max(-1,2*sin(t2))));
per_frame_72=n+=1;);
per_frame_73=
per_frame_74=loop (4,
per_frame_75=  n = wave * 1000; m = wave * size*delay; k = m + (num_res-1)*12; ring = 0;
per_frame_76=  loop (num_res,
per_frame_77=  scale =  (megabuf(n+3) +megabuf(k+3))/4; 
per_frame_78=  scale = 1;
per_frame_79=  gmegabuf(n) = (12-wave) * 0.0019; //Rad
per_frame_80=  gmegabuf(n+3) = megabuf(m+3) ;
per_frame_81=  smod =  (10+wave* gmegabuf(10002+ring*12))/12 *start ;
per_frame_82=  gmegabuf(n+4) = sin((ring+0.5)/num_res*6.28+t1)/3 * smod;
per_frame_83=  gmegabuf(n+5) = cos((ring+0.5)/num_res*6.28+t1)/6 * smod;
per_frame_84=  gmegabuf(n+4) += atan((megabuf(m+4) - megabuf (k+4))* scale) *0.1;
per_frame_85=  gmegabuf(n+5) += atan((megabuf(m+5) + megabuf (k+5))* scale) *0.2;
per_frame_86=  gmegabuf(n+7) += megabuf (m+5)*dt*20;
per_frame_87=  gmegabuf(n+8)  = megabuf(m+8);
per_frame_88=  //Colours
per_frame_89=  gmegabuf (n+9)  = 2*pi*ring/num_res + gmegabuf (10001+ring*12);
per_frame_90=  gmegabuf (n+10) = 2*pi*ring/num_res+2+ gmegabuf (10001+ring*12) ; 
per_frame_91=  gmegabuf (n+11) = 2*pi*ring/num_res+4+ gmegabuf (10001+ring*12) ;
per_frame_92=  n+=12; m+=12; k -= 12; ring +=1);
per_frame_93=wave +=1);
per_frame_94=
per_frame_95=q1 = 0.34; //mod. col
per_frame_96=q2 = 0.35; //mod a - shift
per_frame_97=q3 = 1.2; //mod a - scale
per_frame_98=
per_frame_99=//flash2 pos
per_frame_100=fsig = max (0,vol-avg*2.2);
per_frame_101=ov = if (fsig > ov, fsig, ov*dec_f);
per_frame_102=q22 = log (1+ov) * 0.00003; 
per_frame_103=if (frame%4==0, r1 = rand(1), 0);
per_frame_104=q25 = (r1-0.5)*0.5;
per_frame_105=
per_frame_106=q23 = sin(vol);
per_frame_107=q24 = cos(vol);
per_frame_108=
per_frame_109=q12 = t1;
per_frame_110=q32 = aspecty;
per_frame_111=
per_frame_112=q14 = cos(ctime);
per_frame_113=monitor = q14;
per_frame_114=//Created 2015 by Martin
warp_1=`sampler sampler_worms;
warp_2=`float3 color, mus;
warp_3=`float dx,dy;
warp_4=`shader_body {
warp_5=`float2 uv1 = (uv-.2) * aspect.xy;
warp_6=`
warp_7=`
warp_8=`float2 uv6 = uv1;
warp_9=`float z = q29*2*length(uv1)+rand_frame * 32;
warp_10=`float2 d = normalize(uv1);
warp_11=`float2 rs = clamp(tan(z)*d,-8,8);
warp_12=`uv += .004*GetBlur1(uv)*float2 (0,1);//rs/20;
warp_13=`
warp_14=`
warp_15=`uv6 = .4*sin(uv1*18*rand_frame);
warp_16=`mus = .051/(length(uv6));
warp_17=`mus *= float3 (1,.8,.5);
warp_18=`
warp_19=`float3 blur = GetBlur2(frac(uv));
warp_20=`
warp_21=`float3 crisp= tex2D(sampler_main,uv);
warp_22=`
warp_23=`float3 ret1 = crisp - blur*.03 + .15*mus;
warp_24=`float2 uv2 = (uv_orig-.5)-float2(.5,.5+0.1*q25);
warp_25=`
warp_26=`q25 = 1;
warp_27=`ret = q25*(ret1*.99-.02) + (1-q25)* GetPixel(uv_orig);
warp_28=`
warp_29=`}
comp_1=`float2 complex_div(float2 numerator, float2 denominator){
comp_2=`   return float2( numerator.x*denominator.x + numerator.y*denominator.y,
comp_3=`                  numerator.y*denominator.x - numerator.x*denominator.y)/
comp_4=`          (denominator.x*denominator.x + denominator.y*denominator.y);
comp_5=`}
comp_6=`
comp_7=`float2 uv_polar(float2 domain, float2 center){
comp_8=`   float2 c = domain - center;
comp_9=`   float rad_hq = length(c);
comp_10=`   float ang_hq = atan2(c.x,c.y);
comp_11=`   return float2(ang_hq*M_INV_PI_2, rad_hq);
comp_12=`}
comp_13=`
comp_14=`float2 uv_polar_logarithmic(float2 domain, float2 center, int fins, float log_factor, float2 coord){
comp_15=`   float2 polar = uv_polar(domain, center);
comp_16=`   return float2(polar.x*fins+coord.x, log_factor*log(polar.y) + coord.y);
comp_17=`}
comp_18=`
comp_19=`float2 uv_moebius_transformation(float2 domain, float2 zeroPoint, float2 infinityPoint,float zoom){
comp_20=`   return complex_div((domain - zeroPoint)*zoom, domain - infinityPoint)+0.5;
comp_21=`}
comp_22=`
comp_23=`float2 uv_bipolar(float2 domain, float2 northPole, float2 southPole, int fins, float log_factor, float2 coord){
comp_24=`   float2 help_uv = uv_moebius_transformation(domain, northPole, southPole, 1);
comp_25=`   return uv_polar_logarithmic(help_uv,0.5,fins,log_factor,coord);
comp_26=`}
comp_27=`
comp_28=`
comp_29=`float2 uv_rotate( float2 domain, float2 center, float sinw, float cosw, float scale){
comp_30=`   float2 uv_r = (domain-center);
comp_31=`   return center + float2( cosw*uv_r.x - sinw*uv_r.y, sinw*uv_r.x + cosw*uv_r.y)*scale;
comp_32=`}
comp_33=`
comp_34=`
comp_35=`shader_body
comp_36=`{
comp_37=`float2 uvo = uv;
comp_38=`uv = 0.5 + (uv-0.5)*1.5;
comp_39=`float2 rotate_uv = 0.5+uv_rotate(0 + (uv-0.5)*aspect.xy, 0, q3, q4, 2);
comp_40=`float2 bipolar_uv = uv_bipolar(rotate_uv,float2(0,0.5),float2(1,0.5), 2, 0.35, float2(q11,q12));
comp_41=`float2 mirror_uv = 0.5 + (0.5 - abs( frac( bipolar_uv * 0.5 ) * 2.0 - 1.0 ));
comp_42=`uv = mirror_uv;
comp_43=`    float2 uv_grid=uv+0.03*float2(sin(uv.y*31+0.59*time),sin(uv.x*26+0.37*time));
comp_44=`    ret = tex2D(sampler_main, uv).xyz;
comp_45=`    ret=max(ret,tex2D(sampler_main,uv_grid).xyz); //video distort
comp_46=`    ret *= .93; //gamma
comp_47=`    ret=lum(ret);
comp_48=`    ret=pow(ret,3.5);
comp_49=`    ret+=GetBlur1((uv+uv_grid)/2);
comp_50=`ret /= float3(1.3,2.2,1.23); 
comp_51=`}
