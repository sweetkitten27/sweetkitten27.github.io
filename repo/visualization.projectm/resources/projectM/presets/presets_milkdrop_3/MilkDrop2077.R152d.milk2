Created with MILKDROP 3.21 on 21/09/2023 at 00:43:27
https://twitter.com/MilkDrop2077

blending_pattern=cercle
blending_progress=0.50
blending_direction=-1
random_1=0.372764
random_2=0.290921
random_3=0.281301
random_4=0.991599
random_5=0.892683

[PRESET1_BEGIN]
NAME=MilkDrop2077 - NeonAngel vs Flexi - Sparky's Fractal Textures 3b
MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=4.000
fGammaAdj=2.700
fDecay=0.980
fVideoEchoZoom=2.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=6
bAdditiveWaves=1
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.004
fWaveScale=0.653
fWaveSmoothing=0.900
fWaveParam=0.000
fModWaveAlphaStart=0.500
fModWaveAlphaEnd=1.000
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=1.000
wave_g=1.000
wave_b=0.100
wave_x=0.500
wave_y=0.500
ob_size=0.500
ob_r=0.010
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=25.600
nMotionVectorsY=14.400
mv_dx=0.000
mv_dy=0.000
mv_l=1.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
warp_1=`shader_body
warp_2=`{
warp_3=`float2 uv_m = 1.0 - abs( frac( uv * 0.5 ) * 2.0 - 1.0 ); // Eo.S' mirror code
warp_4=`ret.x = tex2D( sampler_fc_main, uv_m ).z; // first julia fractal iteration
warp_5=`ret.y = lerp(lerp(tex2D( sampler_fc_main, uv_m ).x, ret.x,0.5), 
warp_6=`             GetPixel(uv_orig).y,
warp_7=`             0.75); // 75% of motion blur to the green channel
warp_8=`
warp_9=`
warp_10=`float2 d = texsize.zw*6;
warp_11=`float2 uv_z = (uv_orig-0.5)*0.998 + 0.5; // a small dose of zoom-in
warp_12=`float3 dx = ( GetBlur1(uv_z + float2(1,0)*d) - GetBlur1(uv_z-float2(1,0)*d) );
warp_13=`float3 dy = ( GetBlur1(uv_z + float2(0,1)*d) - GetBlur1(uv_z-float2(0,1)*d) );
warp_14=`uv_z -=float2(dx.z,dy.z)*texsize.zw*2; //shortening of the nebulous matter
warp_15=`ret.z = max((tex2d(sampler_fc_main,uv_m).x-0.5)*3*saturate(1-length(uv_orig-0.5)*3.2), // feeded by the inner of the red channel
warp_16=`             tex2d(sampler_fc_main,uv_z).z);
warp_17=`ret.z += (tex2d(sampler_fc_main,uv_z).z - GetBlur1(saturate(uv_z)).z)*0.02; // sort of geiss' skin dot code
warp_18=`}
comp_1=`float z;
comp_2=`float3 ret1, neu, mus;
comp_3=`float2 rs,rs2,uv1,uv2, uv3,uv4,uv6,dz,dz1;
comp_4=`shader_body
comp_5=`{
comp_6=`float2 uv2;
comp_7=`//uv = (uv-0.5) * aspect.xy;    
comp_8=`dz = 0;
comp_9=`
comp_10=`float2 hor = float2(texsize.z,0);
comp_11=`float2 ver = float2(0,texsize.w);
comp_12=`
comp_13=`float dist = 1;
comp_14=`float inten = 1;
comp_15=`ret1 = 0;
comp_16=`int anz = 3;
comp_17=`int n = 0;
comp_18=`uv4 = (uv+.01);
comp_19=`    dz.x = lum(GetPixel(uv4+hor)- GetPixel (uv4-hor));
comp_20=`    dz.y = lum(GetPixel(uv4+ver)- GetPixel (uv4-ver));
comp_21=`
comp_22=`mus = GetPixel(uv+.0*dz)+.0;
comp_23=`
comp_24=`uv2 = uv-.5;
comp_25=`dz = 0;
comp_26=`while (n <= anz) {
comp_27=`    dist = 1-frac(1.0/anz*n+time/2); //evtl sqrt !;
comp_28=`
comp_29=`    inten =  sqrt(dist)*(1-dist)*2;
comp_30=`    uv3 = 2*uv2*dist +.5;
comp_31=`//    uv3 *= aspect.yx;
comp_32=`    uv3 = frac (uv3);
comp_33=`    neu = GetPixel(uv3)+GetBlur1(uv3);
comp_34=`    ret1 = max(ret1,neu*inten);
comp_35=`n++;
comp_36=`}
comp_37=`
comp_38=`
comp_39=`ret = ret1.bgr*(.5+mus)  +  3*mus*(.1+ret1);
comp_40=`//ret = GetPixel(uv_orig)*2;
comp_41=`}
[PRESET1_END]

[PRESET2_BEGIN]
NAME=MilkDrop2077.R152
MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=5
bAdditiveWaves=0
bWaveDots=1
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=5.552
fWaveSmoothing=0.504
fWaveParam=-1.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=1.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=1.000
ob_g=1.000
ob_b=1.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.850
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
per_frame_init_1=vol = 0; p1 = 0;
per_frame_init_2=vx = .2; vy = -0.1;
per_frame_init_3=kx = 0; ky = 0;
per_frame_init_4=
per_frame_1=dec_med = pow (0.96, 30/fps);
per_frame_2=dec_slow = pow (0.98, 30/fps);
per_frame_3=beat = max (max (bass, mid), treb); 
per_frame_4=avg = avg*dec_slow + beat*(1-dec_slow);
per_frame_5=is_beat = above(beat, .5+avg+peak) * above (time, t0+.2);
per_frame_6=t0 = is_beat*time + (1-is_beat)*t0;
per_frame_7=peak = is_beat * beat + (1-is_beat)*peak*dec_med;
per_frame_8=index = (index + is_beat) %8;
per_frame_9=index2 = (index2 + is_beat*bnot(index))%2;
per_frame_10=index3 = (index3 + is_beat*bnot(index) * bnot(index2))%2;
per_frame_11=
per_frame_12=q20 = avg;
per_frame_13=q21 = beat;
per_frame_14=q22 = peak;
per_frame_15=q23 = index;
per_frame_16=q24 = is_beat;
per_frame_17=
per_frame_18=vol = bass_att + treb_att;
per_frame_19=v2 = v2 * dec_slow + vol * (1-dec_slow) ;
per_frame_20=q26 = max(atan (vol - v2*.8),.3);
per_frame_21=
per_frame_22=q27 = index + 1;
per_frame_23=
per_frame_24=sw = sw*dec_med + (1-dec_med)*(index2%2);
per_frame_25=q28 = sw;
per_frame_26=
per_frame_27=k1 =  is_beat*bnot(index);
per_frame_28=k2 =  is_beat*bnot(index);
per_frame_29=
per_frame_30=p1 =  k1*(p1+1) + (1-k1)*p1;
per_frame_31=p2 = dec_slow * p2+ (1-dec_slow)*p1;
per_frame_32=rott = p2 * 3.1416/2;
per_frame_33=monitor = k1;
per_frame_34=q1 = cos(rott);
per_frame_35=q2 = sin(rott);
per_frame_36=q3 = -q2;
per_frame_37=q4 = q1;
per_frame_38=
per_frame_39=
per_frame_40=q5 = cos(time/6);
per_frame_41=q6 = -sin(time/6);
per_frame_42=q7 = -q6;
per_frame_43=q8 = q5;
per_frame_44=
per_frame_45=zoom = 1;
per_frame_46=rot = -0;
per_frame_47=
per_frame_48=movez = movez + .006*(q1+1.1)*30/fps;
per_frame_49=q29 = movez;
per_frame_50=rota = rota + .003*(2-q1)*30/fps;
per_frame_51=q30 = rota;
per_frame_52=q31 = 2 + 16*abs(cos(time/18));
per_frame_53=q32 = cos(time/23)/4;
per_frame_54=
per_frame_55=
per_frame_56=
warp_1=`float3 mus;
warp_2=`float2 rs, uv1, uv6, uv7, uv8;
warp_3=`float dx,dy;
warp_4=`shader_body {
warp_5=`uv = uv_orig;
warp_6=`uv1 = (uv-.5) * aspect.xy;
warp_7=`
warp_8=`//BACKGROUND
warp_9=`float z = 16*length(uv1)+time;
warp_10=`float2 uvn =normalize(uv1);
warp_11=`rs = clamp(tan(z)*uvn,-5,5)/2;
warp_12=`
warp_13=`//CRYSTAL
warp_14=`float mult = q31;
warp_15=`uv7 = sin(uv1*mult);
warp_16=`uv8 = uv7;
warp_17=`float dist = length(uv8);
warp_18=`dist *= (abs(uv1.x) + abs(uv1.y))+ q32;
warp_19=`
warp_20=`float ang2 = atan2 (uv8.y,uv8.x);
warp_21=`ang2 =  .1*floor (16* ang2);
warp_22=`float2 dir = .5*uv8+float2 (cos(ang2), sin(ang2));
warp_23=`
warp_24=`
warp_25=`z = (1-cos(8*dist));
warp_26=`z = saturate (z);
warp_27=`
warp_28=`//ADD
warp_29=`float mask = (z >= .5); //momentan beliebig
warp_30=`rs = q28*rs + (1-q28)*rs.yx;
warp_31=`uv += (1-mask)*.03*(rs.yx) + .5*mask*z*normalize(dir);
warp_32=`
warp_33=`//ZENTRALSTRAHL
warp_34=`uv6 = mul (uv1,float2x2(_qb));
warp_35=`mus = abs(0.01/(sqrt(uv6.x)+.001))*(rad+.2);
warp_36=`
warp_37=`//DOTS
warp_38=`float2 uv2 = .7*uv1+.3*sin(uv1*16+4*float2 (q5,q6));
warp_39=`uv2 *= .2;
warp_40=`float3 dots = q26*saturate(.001/(length(uv2)));
warp_41=`float3 blur = GetBlur1(frac(uv));
warp_42=`float3 crisp= GetPixel(uv);
warp_43=`float3 diff = (crisp) - .5*blur;
warp_44=`float3 ret1 = crisp + mus + dots;
warp_45=`
warp_46=`float3 mod = tex2D (sampler_noise_lq,.5*uv+time*.01)-.2;
warp_47=`mod = 1 - mod*diff;
warp_48=`
warp_49=`ret = (1-mask)*ret1*mod + mask*ret1*mod;
warp_50=`ret = ret *.98- .03;
warp_51=`
warp_52=`}
comp_1=`float3 ret1, neu, crisp, blur;
comp_2=`float2 uv2, uv3;
comp_3=`
comp_4=`shader_body
comp_5=`{
comp_6=`float ang2, c, s;
comp_7=`uv -= 0.5;
comp_8=`uv *= aspect.xy;    
comp_9=`
comp_10=`float2 tmp = uv;
comp_11=`float dist = 1;
comp_12=`float inten = 1;
comp_13=`float mask = 0;
comp_14=`ret1 = 0;
comp_15=`int anz = 3;
comp_16=`float n = 0;
comp_17=`float t_rel = q29;
comp_18=`while (n <= anz) {
comp_19=`    ang2 = 6.28*n/anz+q30;
comp_20=`    c = cos(ang2);
comp_21=`    s = sin(ang2);
comp_22=`    uv2.x =  uv.x*c - uv.y*s;
comp_23=`    uv2.y =  uv.x*s + uv.y*c;
comp_24=`    uv2*= aspect.yx;
comp_25=`
comp_26=`    dist = 1-frac(n/anz+t_rel); //evtl sqrt !
comp_27=`
comp_28=`    inten =  4*dist*(1-dist*dist);
comp_29=`    uv3 = 3*uv2*dist + 0.5+.0*float2(q5,q6);
comp_30=`    crisp = GetPixel(uv3);
comp_31=`    blur = GetBlur1(frac(uv3)) * float3 (.8,.9,1);
comp_32=`    ret1 = max(ret1,(crisp+blur)*inten);
comp_33=`n++;
comp_34=`}
comp_35=`
comp_36=`
comp_37=`float3 ret1 = ret1 ;
comp_38=`//ret1 = GetPixel(.5+uv_orig*aspect.yx*1.2);
comp_39=`
comp_40=`
comp_41=`ret = ret1-.1;
comp_42=`
comp_43=`}
[PRESET2_END]
