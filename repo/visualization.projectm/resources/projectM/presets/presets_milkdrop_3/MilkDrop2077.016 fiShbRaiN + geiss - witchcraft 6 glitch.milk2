Created with MILKDROP 3.21 on 21/09/2023 at 00:51:30
https://twitter.com/MilkDrop2077

blending_pattern=side
blending_progress=0.50
blending_direction=1
random_1=0.998509
random_2=0.895528
random_3=0.307588
random_4=0.175610
random_5=0.068564

[PRESET1_BEGIN]
NAME=MilkDrop2077 - NeonAngel vs Flexi - Sparky's Fractal Textures 3b
NAME=MilkDrop2077 - NeonAngel vs Flexi - Sparky's Fractal Textures 3b
MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=4.000
fGammaAdj=2.700
fDecay=0.980
fVideoEchoZoom=2.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=6
bAdditiveWaves=1
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.004
fWaveScale=0.653
fWaveSmoothing=0.900
fWaveParam=0.000
fModWaveAlphaStart=0.500
fModWaveAlphaEnd=1.000
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=1.000
wave_g=1.000
wave_b=0.100
wave_x=0.500
wave_y=0.500
ob_size=0.500
ob_r=0.010
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=25.600
nMotionVectorsY=14.400
mv_dx=0.000
mv_dy=0.000
mv_l=1.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
warp_1=`shader_body
warp_2=`{
warp_3=`float2 uv_m = 1.0 - abs( frac( uv * 0.5 ) * 2.0 - 1.0 ); // Eo.S' mirror code
warp_4=`ret.x = tex2D( sampler_fc_main, uv_m ).z; // first julia fractal iteration
warp_5=`ret.y = lerp(lerp(tex2D( sampler_fc_main, uv_m ).x, ret.x,0.5), 
warp_6=`             GetPixel(uv_orig).y,
warp_7=`             0.75); // 75% of motion blur to the green channel
warp_8=`
warp_9=`
warp_10=`float2 d = texsize.zw*6;
warp_11=`float2 uv_z = (uv_orig-0.5)*0.998 + 0.5; // a small dose of zoom-in
warp_12=`float3 dx = ( GetBlur1(uv_z + float2(1,0)*d) - GetBlur1(uv_z-float2(1,0)*d) );
warp_13=`float3 dy = ( GetBlur1(uv_z + float2(0,1)*d) - GetBlur1(uv_z-float2(0,1)*d) );
warp_14=`uv_z -=float2(dx.z,dy.z)*texsize.zw*2; //shortening of the nebulous matter
warp_15=`ret.z = max((tex2d(sampler_fc_main,uv_m).x-0.5)*3*saturate(1-length(uv_orig-0.5)*3.2), // feeded by the inner of the red channel
warp_16=`             tex2d(sampler_fc_main,uv_z).z);
warp_17=`ret.z += (tex2d(sampler_fc_main,uv_z).z - GetBlur1(saturate(uv_z)).z)*0.02; // sort of geiss' skin dot code
warp_18=`}
comp_1=`float z;
comp_2=`float3 ret1, neu, mus;
comp_3=`float2 rs,rs2,uv1,uv2, uv3,uv4,uv6,dz,dz1;
comp_4=`shader_body
comp_5=`{
comp_6=`float2 uv2;
comp_7=`//uv = (uv-0.5) * aspect.xy;    
comp_8=`dz = 0;
comp_9=`
comp_10=`float2 hor = float2(texsize.z,0);
comp_11=`float2 ver = float2(0,texsize.w);
comp_12=`
comp_13=`float dist = 1;
comp_14=`float inten = 1;
comp_15=`ret1 = 0;
comp_16=`int anz = 3;
comp_17=`int n = 0;
comp_18=`uv4 = (uv+.01);
comp_19=`    dz.x = lum(GetPixel(uv4+hor)- GetPixel (uv4-hor));
comp_20=`    dz.y = lum(GetPixel(uv4+ver)- GetPixel (uv4-ver));
comp_21=`
comp_22=`mus = GetPixel(uv+.0*dz)+.0;
comp_23=`
comp_24=`uv2 = uv-.5;
comp_25=`dz = 0;
comp_26=`while (n <= anz) {
comp_27=`    dist = 1-frac(1.0/anz*n+time/2); //evtl sqrt !;
comp_28=`
comp_29=`    inten =  sqrt(dist)*(1-dist)*2;
comp_30=`    uv3 = 2*uv2*dist +.5;
comp_31=`//    uv3 *= aspect.yx;
comp_32=`    uv3 = frac (uv3);
comp_33=`    neu = GetPixel(uv3)+GetBlur1(uv3);
comp_34=`    ret1 = max(ret1,neu*inten);
comp_35=`n++;
comp_36=`}
comp_37=`
comp_38=`
comp_39=`ret = ret1.bgr*(.5+mus)  +  3*mus*(.1+ret1);
comp_40=`//ret = GetPixel(uv_orig)*2;
comp_41=`}
[PRESET1_END]

[PRESET2_BEGIN]
NAME=MilkDrop2077.R207 02
MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=5.000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=2
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.402
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=0.550
fWarpScale=100.000
fZoomExponent=0.98257
fShader=0.000
zoom=0.99971
rot=0.00000
cx=0.000
cy=0.000
dx=-0.00500
dy=0.00000
warp=0.00000
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=1.000
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=49.920
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.140
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=0.96000
wavecode_0_smoothing=0.54000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=ma=ma+(above(bass,1)*3.1415*.01*bass);
wave_0_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_0_per_point3=
wave_0_per_point4=mx=mx+(0.00023*cos(ma));
wave_0_per_point5=my=my+(0.00018*tan(ma));
wave_0_per_point6=
wave_0_per_point7=mx=if(above(mx,0.86),(0.86-mx),mx);
wave_0_per_point8=my=if(above(my,.9),(.9-my),my);
wave_0_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_0_per_point10=my=if(below(my,.1),(.9+my),my);
wave_0_per_point11=
wave_0_per_point12=x=1-mx;
wave_0_per_point13=y=my;
wave_0_per_point14=
wave_0_per_point15=a=(above(bass+mid+treb,.8));
wave_0_per_point16=pi23=4*asin(1)*.333333333;
wave_0_per_point17=t1=bass+mid+treb;
wave_0_per_point18=r=(sin(time*.3+t1-0*pi23)+1)*.5;
wave_0_per_point19=g=(sin(time*0.26+t1-1*pi23)+1)*0.53;
wave_0_per_point20=b=(sin(time*.3+t1-2*pi23)+1)*.5;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=0.850
wavecode_1_a=1.000
wave_1_per_point1=ma=ma+(above(bass,1)*3.1415*.05*bass);
wave_1_per_point2=ma=ma-(above(mid,1)*3.1415*.05*mid);
wave_1_per_point3=
wave_1_per_point4=mx=mx+(0.00009*tan(ma));
wave_1_per_point5=my=my+(0.00009*sin(ma));
wave_1_per_point6=
wave_1_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_1_per_point8=my=if(above(my,0.78),(0.78-my),my);
wave_1_per_point9=mx=if(below(mx,0.09),(0.87+mx),mx);
wave_1_per_point10=my=if(below(my,.1),(.9+my),my);
wave_1_per_point11=
wave_1_per_point12=x=1-mx;
wave_1_per_point13=y=1-my;
wave_1_per_point14=
wave_1_per_point15=a=(above(bass+mid+treb,.1));
wave_1_per_point16=pi23=4*asin(1)*.333333333;
wave_1_per_point17=t1=bass+mid+treb;
wave_1_per_point18=r=(sin(time*.3+t1-0*pi23)+1)*.5;
wave_1_per_point19=g=(sin(time*.3+t1-1*pi23)+1)*.5;
wave_1_per_point20=b=(sin(time*0.33+t1-2*pi23)+1)*0.56;
shapecode_0_enabled=1
shapecode_0_sides=3
shapecode_0_additive=1
shapecode_0_thickOutline=1
shapecode_0_textured=1
shapecode_0_num_inst=311
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.03307
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.62832
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=0.880
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=0.000
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=0.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shape_0_per_frame1=ma=ma+(above(bass,1)*3.1415*.01*bass);
shape_0_per_frame2=ma=ma-(above(treb,1)*3.1415*.01*treb);
shape_0_per_frame3=
shape_0_per_frame4=mx=mx+(.0002*cos(ma));
shape_0_per_frame5=my=my+(.0002*tan(ma));
shape_0_per_frame6=
shape_0_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_0_per_frame8=my=if(above(my,0.835),(0.835-my),my);
shape_0_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_0_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_0_per_frame11=
shape_0_per_frame12=x=1-mx;
shape_0_per_frame13=y=1-my;
shape_0_per_frame14=
shape_0_per_frame15=ang=(sin(time*.35)+1)*3;
shape_0_per_frame16=a=(above(bass+mid+treb,.8));
shape_0_per_frame17=pi23=4*asin(1)*0.3399999997;
shape_0_per_frame18=t1=bass+mid+treb;
shape_0_per_frame19=r=(sin(time*0.29+t1-0*pi23)+1)*.5;
shape_0_per_frame20=g=(sin(time*.3+t1-1*pi23)+1)*.5;
shape_0_per_frame21=b=(sin(time*0.3+t1-2*pi23)+1)*0.47;
shape_0_per_frame22=r2=(sin(time*0.33+t1-0*pi23)+1)*.5;
shape_0_per_frame23=g2=(sin(time*.3+t1-1*pi23)+1)*.5;
shape_0_per_frame24=b2=(sin(time*0.25+t1-2*pi23)+1)*0.57;
shapecode_1_enabled=1
shapecode_1_sides=3
shapecode_1_additive=0
shapecode_1_thickOutline=1
shapecode_1_textured=0
shapecode_1_num_inst=281
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.03347
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=0.000
shapecode_1_b2=1.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=0.000
shapecode_1_border_b=0.000
shapecode_1_border_a=0.000
shape_1_per_frame1=ma=ma+(above(bass,1)*2.67028*0.049*bass);
shape_1_per_frame2=ma=ma-(above(mid,1)*3.1415*.05*mid);
shape_1_per_frame3=
shape_1_per_frame4=mx=mx+(0.0001*tan(ma));
shape_1_per_frame5=my=my+(0.00011*sin(ma));
shape_1_per_frame6=
shape_1_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_1_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_1_per_frame9=mx=if(below(mx,.1),(.9+mx),mx);
shape_1_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_1_per_frame11=
shape_1_per_frame12=x=1-mx;
shape_1_per_frame13=y=1-my;
shape_1_per_frame14=
shape_1_per_frame15=ang=(sin(time*.30)+1)*3.3;
shape_1_per_frame16=a=(above(bass+mid+treb,.8));
shape_1_per_frame17=pi23=4*asin(1)*.333333333;
shape_1_per_frame18=t2=0;//bass+mid+treb;
shape_1_per_frame19=r=(sin(time*.3+t2-0*pi23)+1)*.5;
shape_1_per_frame20=g=(sin(time*.3+t2-1*pi23)+1)*.5;
shape_1_per_frame21=b=(sin(time*0.33+t2-2*pi23)+1)*0.54;
shape_1_per_frame22=r2=(sin(time*.3+t2-0*pi23)+1)*.5;
shape_1_per_frame23=g2=(sin(time*0.26+t2-1*pi23)+1)*0.59;
shape_1_per_frame24=b2=(sin(time*.3+t2-2*pi23)+1)*.5;
per_frame_1=v = 2.6+sin(time*0.001)*.5;
per_frame_2=
per_frame_3=wave_x =   if(equal(frame % 3,2)-1,if(equal(frame%3,1), (x1+3*x2)/4, (3*x1+x2)/4), (x1+x2)/2);
per_frame_4=wave_y = 1-if(equal(frame % 3,2)-1,if(equal(frame%3,1), (y1+3*y2)/4, (3*y1+y2)/4), (y1+y2)/2);
per_frame_5=
per_frame_6=wave_r = if(equal(frame % 6,2)-1,if(equal(frame%3,1), 1, 0),1);
per_frame_7=wave_g = if(equal(frame % 6,2)-1,if(equal(frame%3,1), 1, 1),0);
per_frame_8=wave_b = if(equal(frame % 3,2)-1,if(equal(frame%3,1), 0, 1),1);
per_frame_9=
per_frame_10=q1 = x1/4;
per_frame_11=q2 = x2*4;
per_frame_12=q3 = y1*bass*2;
per_frame_13=q4 = y2;
per_frame_14=wave_a = 0;
per_pixel_1=
per_pixel_2=q1=sw1_;
per_pixel_3=q2=1-exp(-2-4*abs(sw2));
per_pixel_4=q3=abs(sw3)*3;
per_pixel_5=q4=abs(sw4)*3;
per_pixel_6=q5=sw5_;
per_pixel_7=q6=sw6_*1.5;
per_pixel_8=//reg32=aspecty;
per_pixel_9=
per_pixel_10=
per_pixel_11=
per_pixel_12=x1 = q1;
per_pixel_13=y1 = q3;
per_pixel_14=x2 = q2;
per_pixel_15=y2 = q4;
per_pixel_16=
per_pixel_17=d = sqrt( (x1-x2)*(x1-x2) + (y1-y2)*(y1-y2));
per_pixel_18=d1 = sqrt( (x1-x)*(x1-x) + (y1-y)*(y1-y));
per_pixel_19=d2 = sqrt( (x2-x)*(x2-x) + (y2-y)*(y2-y));
per_pixel_20=
per_pixel_21=d3 = d-d1-d2+bass*bass*bass*0.03;
per_pixel_22=s = 100;
per_pixel_23=c = 10+bass*bass;
per_pixel_24=scale = 0.01*(bass+2);
per_pixel_25=
per_pixel_26=sigmoide = 5/(1+pow(2,-c*d3))-1;
per_pixel_27=peek = (cos(atan(s*d3)*pi/2)+1);
per_pixel_28=dd = scale*peek*sigmoide;
per_pixel_29=o=-0.3*(1+bass*2);
per_pixel_30=dx =  dd*sin(y-y1)*(o+d2) - dd*sin(y-y2)*(o+d1);//((x1+x2)-2*x);
per_pixel_31=dy = -dd*tan(x-x1)*(o+d2) + dd*sin(x-x2)*(o+d1);//((y1+y2)-2*y);
warp_1=`shader_body
warp_2=`{
warp_3=`float2 uv_m = 1.0 - abs( frac( uv * 0.5 ) * 2.0 - 1.0 ); // Eo.S' mirror code
warp_4=`ret.x = tex2D( sampler_fc_main, uv_m ).x*0.23;
warp_5=`
warp_6=`
warp_7=`float2 d = texsize.zw*4;
warp_8=`float2 uv_z = (uv_orig-0.5)*0.996 + 0.5; // a small dose of zoom-in
warp_9=`float3 dx = ( GetBlur1(uv_z + float2(1,0)*bass) - GetBlur1(uv_z-float2(1,0)*d) );
warp_10=`float3 dy = ( GetBlur1(uv_z + float2(0,1)*d) - GetBlur1(uv_z-float2(0,1)*d) );
warp_11=`uv_z -=float2(dx.z,dy.z)*texsize.zw*2; //shortening of the nebulous matter
warp_12=`ret.z = max((tex2d(sampler_fc_main,uv_m).x-0.5)*3*saturate(1-length(uv_orig-0.5)*3.2), // feeded by the inner of the red channel
warp_13=`             tex2d(sampler_fc_main,uv_z).z);
warp_14=`ret.z += (tex2d(sampler_fc_main,uv_z).z - GetBlur1(saturate(uv_z)).z)*0.03; // sort of geiss' skin dot code
warp_15=`
warp_16=`
warp_17=`float2 uv_y = lerp(uv,uv_orig,0.9996); // pushing the glassy stuff a little bit
warp_18=`ret.y =max(tex2d(sampler_fc_main,uv_y).y ,tex2d(sampler_fc_main,uv_orig).z)-0.018; // feeded by the green channel and fade-out
warp_19=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    float2 d = texsize.zw;
comp_4=`    float3 dx = ( GetPixel(uv+float2(1,0)*d)-GetPixel(uv-float2(1,0)*d) );
comp_5=`    float3 dy = ( GetPixel(uv+float2(0,1)*d)-GetPixel(uv-float2(0,1)*d) );
comp_6=`float2 dz = float2(dx.y,dy.y)*3;
comp_7=`
comp_8=`d = texsize.zw*2;
comp_9=`dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) );
comp_10=`dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) );
comp_11=`
comp_12=`dz +=float2(dx.y,dy.y);
comp_13=`
comp_14=`float3 bg = pow(length(dz)*0.8+0,1) + GetBlur2(uv).y*0.8-0.12;
comp_15=`
comp_16=`ret = bg*float3(.7,0.9,0.8);
comp_17=`ret = lerp(ret,float3(1.1,0.2,1.9),GetPixel(uv + float2(dx.x,dy.x)*texsize.zw*18).x*6);
comp_18=`ret = lerp(ret,1,GetPixel(uv).z);
comp_19=`
comp_20=`//ret = GetPixel(uv);
comp_21=`//MilkDrop3 Color Mode:
comp_22=`ret /= float3(2.5,1.2,2.0);
comp_23=`}
[PRESET2_END]
